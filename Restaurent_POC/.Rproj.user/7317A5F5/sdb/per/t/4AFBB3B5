{
    "collab_server" : "",
    "contents" : "\nlibrary(shinydashboard)\nlibrary(shiny)\nlibrary(googleVis)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(DT)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(highcharter)\n library(httr)\n library(purrr)\n\n# library(plotly)\n\n\n\n\nserver <- function(input, output) {\n  ##today_sales_graph\n  \n  ##plot for monthly sales analysis\n  observe({\n  x<-input$sty \n  # print(x)\n  if(x==\"Today\")\n     {\n       # print(\"Hi all\")\n    \n    output$today_sales_graph <- renderGvis({\n      tdsales<- select(tdaysales,timestamp,Sales)\n      x<-as.POSIXct(tdaysales$timestamp)\n      z<-round_date(x,unit=\"hour\")\n      Time<-strftime(z, format=\"%I.%M %p\")\n      todaysales<-cbind(Time,tdsales)\n      tdsalechart<-gvisAreaChart(todaysales,xvar=\"Time\",yvar=\"Sales\",options=list(width=\"100%\",height=\"200px\"))\n      return(tdsalechart)\n      \n    })\n       \n  }\n  if(x==\"Yesterday\")\n  {\n    output$today_sales_graph <- renderGvis({\n      ydsales<- select(ydaysales,timestamp,Sales)\n      x<-as.POSIXct(ydaysales$timestamp)\n      z<-round_date(x,unit=\"hour\")\n      Time<-strftime(z, format=\"%I.%M %p\")\n      yedaysales<-cbind(Time,ydsales)\n      ydsalechart<-gvisAreaChart(yedaysales,xvar=\"Time\",yvar=\"Sales\",options=list(width=\"100%\",height=\"200px\"))\n      return(ydsalechart)\n      \n    })\n  }\n  })\n    \n  ##plot for monthly sales analysis\n  output$monthly_sales_graph <- renderGvis({\n    msales<- select(daywisesales,day,sales)\n    # Msales<-daywisesales$sales\n    # msaleval<-cbind(msales,Msales)\n    msalechart<-gvisColumnChart(msales,xvar=\"day\",yvar=\"sales\",options =list(seriesType=\"bars\",colors=\"['66CCFF']\"))\n    return(msalechart)\n    \n  })\n  ##plot for yearly sales analysis\n  output$Yearly_sales_graph <- renderGvis({\n    # ysales<- select(ysalesval,Month,Sales)\n     Month<-c(\"Jan\",\"Feb\",\"Mar\")\n     Sales<-ysalesval$Sales\n     ysd<-data.frame(Month,Sales)\n    # ysalechart<-gvisColumnChart(ysd,xvar=\"Month\",yvar=\"Sales\",options=list(colors=\"['#1ABC9C']\"))\n     ysalechart<-gvisPieChart(ysd,options = list(colors=\"['51A39D','B7695C','CDBB79']\"))\n    return(ysalechart)\n    \n  })\n  #####Top 10 best products of current year(2016) in location wise\"\n  output$topproductsinlocwise<- renderGvis({\n    TopBestinloc<- select(locationwise,Location,Name,sales)\n    \n    topbestproinlocchart<-gvisTable(TopBestinloc)\n    return(topbestproinlocchart)\n    \n  })\n  #####Top 10 best products of current year(2016) in location wise\"\n  output$top_Qty_products_loc<- renderGvis({\n    topBestinloc<- select(locationwise,Location,Name,Quantity)\n    \n    Topbestlocchart<-gvisTable(topBestinloc)\n    return(Topbestlocchart)\n    \n  })\n  \n  ##plot for monthly wise sales by lcoation\n  output$sales_Location_graph <- renderGvis({\n    \n    mlocsales <- msalelocval \n    msaleloc <- na.omit(mlocsales) \n    mgeostate <- gvisGeoChart(msaleloc,\"Location\",\"Revenue\",options=list(region=\"US\",displayMode=\"regions\",resolution=\"provinces\",width=\"100%\",height=\"200px\",colors=\"green\"))\n    return(mgeostate)\n    \n  })\n  ##plot for yearly wise sales by lcoation\n  output$sales_Location_graph_Year <- renderGvis({\n    \n    ylocsales <- ysalelocvaly \n    ysaleloc <- na.omit(ylocsales) \n    ygeostate <- gvisGeoChart(ysaleloc,\"Location\",\"Revenue\",options=list(region=\"US\",displayMode=\"regions\",resolution=\"provinces\",width=\"400px\",height=\"200px\",colors=\"red\"))\n    return(ygeostate)\n    \n  })\n  ##plot for a month sales in all the years\n  output$Month_sales_graph_everyYear <- renderGvis({\n    # marchrevenue<- select(RevenueMarchVal,RMinc,Revenue,Year)\n     marchrevenue<- select(RMVal,Revenue,Year)\n    # setNames(, c(\"Year\",\"Revenue\",\"RMinc.annotation\"))\n    # growthinsales.annotation<-(RMVal$RMinc)\n    # marchchart<-gvisColumnChart(RMVal,xvar = \"Year\",yvar = c(\"Revenue\",\"RMinc.annotation\"),options=list(colors=\"['#F1C40F']\"))\n    # \n    # return(marchchart)\n    if(input$probins!=1)\n    {\n      \n      Prevenue<-(RMVal$Revenue[4]+(RMVal$Revenue[4]*input$probins/100))\n      minc1=(((Prevenue-RMVal$Revenue[4])/((RMVal$Revenue[4])))*100)\n      mic.annotation<-c(RMinc.annotation[1],RMinc.annotation[2],RMinc.annotation[3],paste(round(minc1516+minc1,1),\"%\"))\n      # print(Prevenue)\n      rrevenue<-c(RMVal$Revenue[1],RMVal$Revenue[2],RMVal$Revenue[3],Prevenue)\n      year<-c(RMVal$Year[1],RMVal$Year[2],RMVal$Year[3],RMVal$Year[4])\n      # inc.annotation<-paste(((Prevenue-Revenue[4])/Revenue[4])*100,\"%\")\n      rbind<-data.frame(rrevenue,year,mic.annotation)\n      pRsalechart<-gvisColumnChart(rbind,xvar = \"year\",yvar = c(\"rrevenue\",\"mic.annotation\"),options=list(colors=\"['#008000']\"))\n      return(pRsalechart)\n    }else{\n      marchchart<-gvisColumnChart(RMVal,xvar = \"Year\",yvar = c(\"Revenue\",\"RMinc.annotation\"),options=list(colors=\"['#F1C40F']\"))\n      return(marchchart)\n    }\n    \n  })\n \n  ##plot for projection revenue genrted \n  output$Projection<- renderGvis({\n    pRsales<- select(RevenueMarchVal,Year,Revenue)\n    \n    Erevenue<-RevenueMarchVal$Revenue[4]\n    year<-RevenueMarchVal$Year[4]\n    if(input$bins!=1)\n    {\n      Prevenue<-(Erevenue+(Erevenue*input$bins/100))\n      inc.annotation<-paste(((Prevenue-Erevenue)/Erevenue)*100,\"%\")\n      rbind<-data.frame(Prevenue,year,inc.annotation)\n      pRsalechart<-gvisColumnChart(rbind,xvar = \"year\",yvar = c(\"Prevenue\",\"inc.annotation\"),options=list(colors=\"['#008000']\"))\n      return(pRsalechart)\n    }else{\n      rbind<-data.frame(Erevenue,year)\n      pRsalechart<-gvisColumnChart(rbind,xvar = \"year\",yvar = \"Erevenue\",options=list(colors=\"['#008000']\"))\n      return(pRsalechart)\n    }\n    \n    \n  })\n  \n  \n  ##plot for revenue genrted in all the years\n  output$year_wise_revenue<- renderGvis({\n    # yRsales<- select(yRevenue,Year,Revenue,yminc.annotation)\n    yRsalechart<-gvisColumnChart(ymval,xvar = \"Year\",yvar = c(\"Revenue\",\"yminc.annotation\"),options=list(colors=\"['#008000']\"))\n    return(yRsalechart)\n    \n  })\n  ##plot for Qty sold by lcoation in a month\n  output$mQty_Sold_loc<- renderGvis({\n    # ilsales<- select(InventsalesbyRegion,Revenue,Location)\n    mInventorysalesbyRegion <- mIsalesbyRegion\n    milsales <- na.omit(mInventorysalesbyRegion)\n    milgeostate <- gvisGeoChart(milsales,\"Location\",\"QuantityOrdered\",options=list(region=\"US\",displayMode=\"regions\",resolution=\"provinces\",width=\"400px\",height=\"200px\",colors=\"['#2C3E50']\"))\n    return(milgeostate)\n    \n  })\n  ##plot for Qty sold by lcoation in a year\n  output$YQty_Sold_loc<- renderGvis({\n    # ilsales<- select(InventsalesbyRegion,Revenue,Location)\n    yInventorysalesbyRegion <- yIsalesbyRegion\n    yilsales <- na.omit(yInventorysalesbyRegion)\n    yilgeostate <- gvisGeoChart(yilsales,\"Location\",\"QuantityOrdered\",options=list(region=\"US\",displayMode=\"regions\",resolution=\"provinces\",width=\"400px\",height=\"200px\",colors=\"['#5B2C6F']\"))\n    return(yilgeostate)\n    \n  })\n  ##plot for sales and Pricing in a year\n  output$ysalespricing<- renderGvis({\n    yunitssoldandship<- select(ysupplychainval,Month,UnitsOrdered,UnitsShipped)\n    \n    Month<-Month<-c(\"JAN\",\"FEB\",\"MAR\")\n    # ysupplychainval$Month\n    UnitsSold<-ysupplychainval$UnitsOrdered\n    UnitsShipped<-ysupplychainval$UnitsShipped\n    Sales<-ysupplychainval$sales\n    ydf<-data.frame(Month,UnitsSold,UnitsShipped,Sales)\n    # unitssell<-gvisComboChart(unitssoldandship,xvar=\"UnitsOrderd\",yvar=\"UnitsShipped\")\n    yunitssell<-gvisColumnChart(ydf,options=list(seriesType=\"bars\",series='{2: {type:\"line\"}}',colors=\"['0099CC','CCFFCC','#BA4A00']\"))\n    \n    return(yunitssell)\n    \n  })\n  ######\n  ##plot for sales and Pricing in a month\n  output$msalespricing<- renderGvis({\n    munitssoldandship<- select(msupplychainval,Day,UnitsOrdered,UnitsShipped)\n    Day<-msupplychainval$Day\n    UnitsSold<-msupplychainval$UnitsOrdered\n    UnitsShipped<-msupplychainval$UnitsShipped\n    Sales<-msupplychainval$sales\n    mdf<-data.frame(Day,UnitsSold,UnitsShipped,Sales)\n    # unitssell<-gvisComboChart(unitssoldandship,xvar=\"UnitsOrderd\",yvar=\"UnitsShipped\")\n    munitssell<-gvisColumnChart(mdf,options=list(seriesType=\"bars\",series='{2: {type:\"line\"}}'))\n    \n    return(munitssell)\n    \n  })\n  \n  ##revenue generated for a month\n  output$mrevenue <- renderValueBox({\n    valueBox(\n      paste(round(mRevenueval/1000000,2),\"M\" ), \"Revenue\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"orange\"\n    )\n  })\n  ##revenue generated for a year\n  output$yrevenue <- renderValueBox({\n    valueBox(\n      paste(round(yRevenueval/1000000,2),\"M\" ), \"Revenue\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"orange\"\n    )\n  })\n  ##average order value for a month\n  output$mavg_order <- renderValueBox({\n    valueBox(\n      paste(round(mAvg_Value,2),\"$\"), \"Average Order Value\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"fuchsia\"\n    )\n    \n  })\n  ##average order value for a year\n  output$yavg_order <- renderValueBox({\n    valueBox(\n      paste(round(YAvg_Value,2),\"%\"), \"Average Order Value\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"fuchsia\"\n    )\n    \n  })\n  ###AverageOrder +/- Growth\n  Avg_Inc=((YAvg_Value-YAvg_Value15)/YAvg_Value15)*100\n         output$incavg_order <- renderValueBox({\n           valueBox(\n             paste(round(Avg_Inc,2),\"%\"), \"Growth/Fall Avg Order Value\", icon = icon(\"glyphicon glyphicon-arrow-down\",lib=\"glyphicon\"),\n             color = \"olive\"\n           )\n           \n         })\n  ##returning customers in a month\n  output$mrecustomers <- renderValueBox({\n    valueBox(\n      paste(mRepeatVal), \"Returning Customers\", icon = icon(\"glyphicon glyphicon-repeat\",lib=\"glyphicon\"),\n      color = \"teal\"\n      ##glyphicon glyphicon-scale\n    )\n    \n  })\n  ###returning customers in a year\n  output$yrecustomers <- renderValueBox({\n    valueBox(\n      paste(round(Inc,2),\"%\"), \"Returning Customers\", icon = icon(\"glyphicon glyphicon-repeat\",lib=\"glyphicon\"),\n      color = \"teal\"\n    )\n    \n  })\n  ###returning customers in a year\n  orderrate=((order16-order15)/order15)*100\n  output$orderpick <- renderValueBox({\n    valueBox(\n      paste(round(orderrate,2),\"%\"), \"OrderPicking\", icon = icon(\"glyphicon glyphicon-repeat\",lib=\"glyphicon\"),\n      color = \"teal\"\n    )\n    \n  })\n  \n  ##New customers added in a month\n  output$mNewCustBox <- renderInfoBox({\n    valueBox(\n      paste(mNewCustVal), \"New Customers\", icon = icon(\"glyphicon glyphicon-user\",lib=\"glyphicon\"),\n      color = \"blue\"\n    )\n    \n  })\n  ##Ecomerce ratio for a month\n  output$mEratio <- renderValueBox({\n    valueBox(\n      paste(round(mERatio,2),\"%\"),\"Ecommerce Conversion Ratio\",\n      color = \"purple\",icon = icon(\"credit-card\")\n       \n    )\n    \n  })\n  ##Ecomerce ratio for a year\n  output$yEratio <- renderValueBox({\n    valueBox(\n      paste(round(yERatio,2),\"%\"),\"Ecommerce Conversion Ratio\",\n      color = \"purple\",icon = icon(\"credit-card\")\n      \n    )\n    \n  })\n  ###Visits per day\n  ###### Total Visits Per day ########\n  \n  output$dVisitsBox <- renderValueBox({\n    valueBox(\n      paste(dVisitsperday), \"Visits per Day\",icon = icon(\"glyphicon glyphicon-eye-open\",lib=\"glyphicon\"),\n      color = \"green\"\n      \n    )\n  })\n  # ###############Bounce Rate\n  # output$bouncerate <- renderValueBox({\n  #   valueBox(\n  #     paste(round(bouncerate,2),\"%\"), \"Bounce Rate\", icon = icon(\"glyphicon glyphicon-minus\",lib=\"glyphicon\"),\n  #     color = \"navy\"\n  #   )\n  #   \n  # })\n  #################Increase in Sales Percentage\n  mincreaseper=(difference/febdata)*100\n  output$salesComparision <- renderValueBox({\n    valueBox(\n      paste(round(mincreaseper,2),\"%\"), \"Growth in sales\", icon = icon(\"glyphicon glyphicon-open\",lib=\"glyphicon\"),\n      color = \"red\"\n    )\n    \n  })\n  #################Increase in Sales Percentage per year\n  yincreaseper=(differencey/febdata)*100\n  output$ysalesComparision <- renderValueBox({\n    valueBox(\n      paste(round(yincreaseper,2),\"%\"), \"Growth in sales\", icon = icon(\"glyphicon glyphicon-sort\",lib=\"glyphicon\"),\n      color = \"red\"\n    )\n    \n  })\n  \n  \n  #####Top 10 best products of current year(2016)\"\n  output$topproducts<- renderGvis({\n    TopBest<- select(TopBestProducts,Productid,Name,Sales)\n    topbestprochart<-gvisTable(TopBest)\n    return(topbestprochart)\n    \n  })\n  \n  #####Top 10 best products of current year(2016) by quantity\"\n  output$top_Qty_products<- renderGvis({\n    topBest<- select(TopBestProducts,Productid,Name,Quantity)\n    topprochart<-gvisTable(topBest)\n    return(topprochart)\n    \n  })\n\n###Available Inventory and Downlaoding filteredData  \n  output$tbl = DT::renderDataTable(\n    availInventoryStock, filter = 'top', options = list(lengthChange = TRUE, pageLength = 5,scrollX = TRUE)\n    \n  )\n  \n  #####for download button################ \n  output$x3 = downloadHandler(\"mydata.csv\",\n                              filename = function() {\n                                # input$filetype\n                                paste( \"filtereddata\",sep = \".\",\"csv\")\n                              },\n                              \n                              content = function(file) {\n                                s = input$tbl_rows_all\n                                write.csv(availstock[s, , drop = FALSE], file)\n                              } )\n  availstock = availInventoryStock[, c('Productid', 'Quantity','Productname')]\n  \n  output$tb1 = DT::renderDataTable(availstock, server = FALSE,options=list(\"scrollY\":\"350px\",\n                                   \"scrollCollapse\": TRUE,\n                                   \"paging\":         FALSE))\n  \n\n  ##Average Inventory sold for a month\n  output$minventory <- renderInfoBox({\n    infoBox(\n      \" Averge Inventory SOld per Day\", paste(round(dInvent/26,2)),icon=icon(\"glyphicon glyphicon-scale\",lib=\"glyphicon\"),\n      color = \"blue\",fill = TRUE\n    )\n  })\n  ##Average Inventorysold for a year\n  output$yinventory <- renderInfoBox({\n    infoBox(\n      \" Averge Inventory SOld Per Month\", paste( round(yInvent/3,2)),icon=icon(\"glyphicon glyphicon-scale\",lib=\"glyphicon\"),\n      color = \"blue\",fill = TRUE\n    )\n  })\n  ##top product in a month by sales\n  output$mtopproduct<- renderInfoBox({\n    infoBox(\n      \" Top Product\",paste(maxQty/1000,\"K\"),icon=icon(\"glyphicon glyphicon-apple\",lib=\"glyphicon\"),\n      color = \"red\",fill = TRUE\n    )\n  })\n  ##top product in a year by sales\n  output$ytopproduct<- renderInfoBox({\n    infoBox(\n      \" Top Product \",paste(ymaxQty/1000,\"K\"),icon=icon(\"glyphicon glyphicon-apple\",lib=\"glyphicon\"),\n      color = \"red\",fill = TRUE\n    )\n  })\n \n  ##Inventory tunrnover for a month\n  output$miturn<- renderInfoBox({\n    infoBox(\n      \"Units SOld in Month\",paste(round(dInvent)),icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"green\",fill = TRUE\n    )\n  })\n  ##Inventory tunrnover for a year\n  output$yiturn<- renderInfoBox({\n    infoBox(\n      \"Units Sold in Year\",paste(round(yInvent)),icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),\n      color = \"green\",fill = TRUE\n    )\n  })\n###Units per transactions in a month\n  output$munits <- renderValueBox({\n  infoBox(\n    \"Units per Transaction\",paste(round(munitspertransaction,3)),  icon = icon(\"thumbs-up\", lib = \"glyphicon\"),\n    color = \"orange\",fill=TRUE\n  )\n})\n  ###Units per transactions in a month\n  output$yunits <- renderValueBox({\n    infoBox(\n      \"Units per Transaction\",paste(round(yunitspertransaction,3)),  icon = icon(\"thumbs-up\", lib = \"glyphicon\"),\n      color = \"orange\",fill=TRUE\n    )\n  })\n  ### month\n  output$month <- renderValueBox({\n    valueBox(\n      \"26 March 2016\",paste(\"Analysis\"),\n      color = \"orange\"\n    )\n  })\n # # ###Top 10  Products in corresponding months\n # #  output$TopProduct_sold_Analysis<- renderGvis({\n # #    yTopProSold<- select(yTopProSales,months1,Qty)\n # #    yTopProSoldchart<-gvisPieChart(yTopProSold)\n # #    return(yTopProSoldchart)\n # #    \n # #  })\n # #  \n #  observe({\n #    y<-input$Month_Sold_Pro \n #    \n #    if(y==\"Mar\")\n #    {\n #      \n #      output$TopProduct_sold_Analysis<- renderGvis({\n #        ymarTopProSold<- select(yTopProSales3,Name,Qty)\n #        ymarTopProSoldchart<-gvisPieChart(ymarTopProSold)\n #        return(ymarTopProSoldchart) \n #      })\n #    }\n #    if(y==\"Feb\")\n #    {\n #      output$TopProduct_sold_Analysis<- renderGvis({\n #        yfebTopProSold<- select(yTopProSales2,Name,Qty)\n #        yfebTopProSoldchart<-gvisPieChart(yfebTopProSold)\n #        return(yfebTopProSoldchart) \n #      })\n #    }\n #    if(y==\"Jan\")\n #    {\n #      output$TopProduct_sold_Analysis<- renderGvis({\n #        yjanTopProSold<- select(yTopProSales1,Name,Qty)\n #        yjanTopProSoldchart<-gvisPieChart(yjanTopProSold)\n #        return(yjanTopProSoldchart) \n #        \n #      })\n #    }\n #  \n #  })\n  \n  ##################max_units ordered for all years##############lengthChange = TRUE, pageLength = 5,scrollY = TRUE,scrollX = FALSE,autoWidth = T\n  output$tb4 = DT::renderDataTable(\n    maxunitssold, filter = 'top', options = list(lengthChange = TRUE, pageLength = 5,scrollY = TRUE,scrollX = FALSE,autoWidth = T)\n    \n  )\n  \n  #################total number of units  sold in all years############################\"\n  output$total_units_sold<- renderGvis({\n    numberofunits<- select(numberofunitssold,year,qty)\n    \n    numberofunitschart<-gvisColumnChart(numberofunits)\n    return(numberofunitschart)\n    \n  })\n  \n  ###############################################\n  output$tb5 = DT::renderDataTable(\n    wholeyears, filter = 'top', options = list(lengthChange = TRUE, pageLength = 5,scrollY = TRUE,scrollX = TRUE,autoWidth = T)\n    \n  )\n  #############plot for Trends in the today and yesterday#############\n  \n   output$tb2<-renderTable(row2016 ,options = list(lengthChange=FALSE,class = 'cell-border stripe'))\n  \n  \n  \n  \n  \n  # output$tb2 = DT::renderDataTable(\n  #   \n  #    row2016 ,options = list(lengthChange=FALSE,class = 'cell-border stripe')\n  #  \n  # \n  # )\n  #######yesterday graph\n  output$ygraphs<- renderGvis({\n    #ord<- select(row2016)\n    values<-c(\"Quantityordered\",\"AvgperCustomer\",\"Sales\")\n    yesterday<-c(1129.00,194.8583,4481.74)\n    today<-c(825.00,200.1278,3602.30)\n    \n    yes<-yesterday\n    tod<-today\n    \n    tdf<-data.frame(values,yes,tod)\n    ordchart <-gvisColumnChart(tdf,options=list(colors=\"['666633','CCCC99']\"))\n    return(ordchart) \n  })\n   ###########websitetraffic growth percentage#######################\n  output$websitetrafficgrowth <- renderValueBox({\n    valueBox(\n      paste(webtrafficgrowthin2016,\"%\"), \"WebSiteTraffic Growth\", icon = icon(\"glyphicon glyphicon-arrow-down\",lib=\"glyphicon\"),\n      color = \"aqua\"\n    )\n\n  })\n  \n  ######################sales analysis for all years in feb and march######################\n  \n  output$Trends_FM<- renderGvis({\n    febmarch<- select(febmarchanalysis,Year,Month,Revenue)\n    Tdiff.annotation<-c(0,0,0,0)\n    Trdiff.annotation<-c(\"111.67%\",\"17.1%\",\"7.27%\",\"6.95%\")\n     # print(Trdiff.annotation)\n    Year<-c(\"2013\",\"2014\",\"2015\",\"2016\")\n    F<-c(febmarchanalysis$Revenue[1],febmarchanalysis$Revenue[3],febmarchanalysis$Revenue[5],febmarchanalysis$Revenue[7])\n    M<- c(febmarchanalysis$Revenue[2],febmarchanalysis$Revenue[4],febmarchanalysis$Revenue[6],febmarchanalysis$Revenue[8])\n    # Mbind<-data.frame(M,Trdiff.annotation)\n    trend<-data.frame(Year,F,M,Trdiff.annotation)\n    Trends<-gvisColumnChart(trend,xvar=c(\"Year\"),yvar=c(\"F\",\"M\",\"Trdiff.annotation\"),options=list(seriesType=\"bars\",colors=\"['814374','51A39D']\"))\n    return(Trends)\n    \n  })\n  ########################Brand wise Revenue in a month####################\n  \n  output$Revenue_of_the_brand<- renderGvis({\n    BrandRevenue<- select(BrandRevenue,Brand,Revenue)\n    \n    BrandRevenuechart<-gvisPieChart(BrandRevenue)\n    return(BrandRevenuechart)\n    \n  })\n  ########################Brand wise Revenue in the current year(2016)####################\n  \n  output$year_wise_Brand_Revenue<- renderGvis({\n    YBrandRevenue1<- select(YBrandRevenue,Brand,Revenue)\n    \n    YBrandRevenuechart<-gvisPieChart(YBrandRevenue1)\n    return(YBrandRevenuechart)\n    \n  })\n  #######################Customer Repeat vs New for month#######################################33\n  output$month_cust<- renderHighchart({\n    # grndcntfornew<-c(20,64,67,102)\n    # grndcntforrep<-c(27,51,83,116)\n    # year2<-c(\"2013\",\"2014\",\"2015\",\"2016\")\n    # \n    # newcust<-grndcntfornew\n    # repcust<-grndcntforrep\n    # \n    # nrc<-data.frame(year2,newcust,repcust)\n    # \n    # nrepcustformarch<-gvisColumnChart(nrc,options=list(colors=\"['92CD00','FFCF79']\"))\n    # \n    # return(nrepcustformarch)\n    year<-c(2013,2014,2015,2016)\n    mcustnew<-c(20,64,67,102)\n    mcustrep<-c(27,51,83,116)\n    mydata <- data.frame(NewCustomer=mcustnew,\n                         RepeatCustomer=mcustrep\n    )\n    \n    highchart() %>% \n      hc_chart(type = \"column\") %>% \n      hc_title(text = \"Customer\") %>% \n      hc_xAxis(categories =c('2013', '2014', '2015', '2016'))%>%\n      hc_yAxis(title = list(text = \"no of Customers\")) %>% \n      hc_plotOptions(column = list(\n        dataLabels = list(enabled = TRUE),\n        stacking = \"normal\",\n        enableMouseTracking = TRUE\n      )\n      ) %>% \n      hc_series(list(name=\"NewCustomer\",data=mydata$NewCustomer),\n                list(name=\"RepeatCustomer\",data=mydata$RepeatCustomer)\n      )\n    \n  })\n  #####FOr year########################\n  output$year_cust<- renderHighchart({\n       year<-c(2012,2013,2014,2015,2016)\n        ycustnew<-c(25,86,115,152,108)\n       ycustrep<-c(68,191,314,402,220)\n    mydata <- data.frame(NewCustomer=ycustnew,\n                         RepeatCustomer=ycustrep\n                         )\n    \n   highchart() %>% \n      hc_chart(type = \"column\") %>% \n      hc_title(text = \"Customer\") %>% \n      hc_xAxis(categories =c('2012', '2013', '2014', '2015', '2016'))%>%\n      hc_yAxis(title = list(text = \"no of Customers\")) %>% \n      hc_plotOptions(column = list(\n        dataLabels = list(enabled = TRUE),\n        stacking = \"normal\",\n        enableMouseTracking = TRUE\n        )\n      ) %>% \n     hc_series(list(name=\"NewCustomer\",data=mydata$NewCustomer),\n                list(name=\"RepeatCustomer\",data=mydata$RepeatCustomer)\n                )\n    \n    \n    \n   \n  })\n  \n  #####Brand wise quantity month\n  output$mBrand_wise_qty<- renderGvis({\n    mbrndwiseqty<- select(BrandRevenue,Brand,Qty)\n    mbrandwiseqtychart<-gvisPieChart(mbrndwiseqty)\n    return(mbrandwiseqtychart) \n  })\n  #####Brand wise quantity year\n  output$yBrand_wise_qty<- renderGvis({\n    ybrndwiseqty<- select(YBrandRevenue,Brand,Qty)\n    ybrandwiseqtychart<-gvisPieChart(ybrndwiseqty)\n    return(ybrandwiseqtychart) \n  })\n  ###difference in Qty\n  output$Qty_15_16<- renderGvis({\n    yrevqty<- select(ybrandsale,Brand,CurrentYearQty,LastYearQty,GrowthinQuantity)\n    yrevqtychart<-gvisTable(yrevqty)\n    return(yrevqtychart)\n    \n  })\n  ###Difference in sales\n  output$ySalesdiff<- renderGvis({\n    yrevqty<- select(ybrandsale,Brand,CurrentYear,LastYear,GrowthinSales)\n    yrevqtychart<-gvisTable(yrevqty)\n    return(yrevqtychart)\n    \n  })\n  ###Difference in sales per month\n  output$Rev_curr<- renderGvis({\n    revqty<- select(msalebrand16mar,Brand,CurrentMonthSales,LastMonthSales,SalesGrowth)\n    revqtychart<-gvisTable(revqty)\n    return(revqtychart)\n    \n  })\n  \n  ##Difference in Qty Per month\n  output$Qty_curr<- renderGvis({\n    revqty<- select(msalebrand16mar,Brand,CurrentmonthQty,LastmonthQty,QuantityGrowth)\n    revqtychart<-gvisTable(revqty)\n    return(revqtychart)\n    \n  })\n  ###########topbrand for current month#########\n  output$mtopbrand <- renderValueBox({\n    valueBox(\n      paste(\"NextLevelApparel\"),\"Top Brand \",\n      color = \"maroon\"\n    )\n    \n  })\n    ###############finding the number of visitors in all years ##################\n  output$web_traffic<- renderGvis({\n    #visitors1<- select(yearwebtraffic,year,visitors,visitors1.annotation)\n    # gf<-select(yearwebtraffic)\n    visitors1.annotation<-c(\"0%\",\"252%\",\"18%\",\"41%\",\"-71%\")\n    visitorsgrowthorfall<-data.frame(yearwebtraffic,visitors1.annotation)\n    visitorschart<-gvisColumnChart(visitorsgrowthorfall,xvar = \"year\",yvar = c(\"visitors\",\"visitors1.annotation\"))\n    return(visitorschart)\n    \n  })\n  ##################top customer by revenue for current month##############\n  output$topcustomerforcurrentmonth <- renderValueBox({\n    valueBox(\n      paste(topcustomercurrentmonth),paste(round(mtopcust$Revenue/1000,2),\"K TopCustomer\"), icon = icon(\"glyphicon glyphicon-star\",lib=\"glyphicon\"),\n      color = \"olive\"\n    )\n    \n  })\n  \n   ##################top customer by items ordered for current month##############\n  outputTopcustomer<- renderValueBox({\n    valueBox(\n      paste(topcustomercurrentmonthbyitem), \"Top customer \",icon = icon(\"glyphicon glyphicon-heart\",lib=\"glyphicon\"), \n      color = \"orange\"\n    )\n    \n  })\n #####NewCustomer Vs RepeatedCustomer\n  output$New_Rep_Cust_per<- renderGvis({\n    mname<-c(\"New\",\"Return\")\n    mnn<-c(mNewCustmerper,mRepeatCustmerper,mnewCustmerRev$Revenue,mRepeatCustmerRev$Revenue)\n    mNewRetcustPie<-data.frame(mname,mnn)\n    mNewRepCustchart<-gvisPieChart(mNewRetcustPie,options=list(colors=\"['B84B9E','32B92D']\"))\n    return(mNewRepCustchart) \n  })\n  \n  \n  \n}",
    "created" : 1491106331983.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1677205242",
    "id" : "4AFBB3B5",
    "lastKnownWriteTime" : 1491129146,
    "last_content_update" : 1491129146790,
    "path" : "C:/Users/ADMIN/Desktop/SLC_POC/server.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}