{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(shinydashboard)\nlibrary(googleVis)\nlibrary(plotly)\n\nserver <- function(input, output) {\n  \n  data1 <- function(){\n    inFile <- input$file1\n    if (is.null(inFile))\n      return()\n    \n    data2 <- as.data.frame(read.csv(inFile$datapath))\n    return(data2)\n }\n  \n  output$grosss_sales<- renderValueBox({\n   \n      data2 <- data1()\n      \n      if(length(data2) > 0)\n      {\n      valueBox(paste(round(sum(data2$Gross_Sale ))), \"Revenue\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"orange\")\n      }\n      else\n      {\n        valueBox(paste(\"\"), \"Revenue\",color = \"orange\")\n      }\n     \n  })\n  \n  output$cash <- renderValueBox({\n    \n      data2 <- data1()\n      if(length(data2) > 0)\n       valueBox(paste(sum(data2$Cash )), \"Cash\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"blue\")\n      else\n        valueBox(paste(\"\"), \"Cash\",color = \"blue\")\n  })\n  \n  output$credit_card <- renderValueBox({\n    data2 <- data1()\n    if(length(data2) > 0)\n    valueBox(paste(round(sum(data2$Credit_Card ))), \"Credit Card\", icon = icon(\"glyphicon glyphicon-credit-card\",lib=\"glyphicon\"),color = \"purple\")\n    else\n      valueBox(paste(\"\"), \"Credit Card\",color = \"purple\")\n   })\n  \n  output$tax <- renderValueBox({\n    data2 <- data1()\n    if(length(data2) > 0)\n    {\n    tax1<-(sum(data2$Sale_Including_Tax)-sum(data2$Net_Sale_Excluding_Tax))\n    valueBox(paste(round(tax1,0)), \"Tax\", icon = icon(\"glyphicon glyphicon-arrow-down\",lib=\"glyphicon\"),color = \"olive\")\n    }\n    else\n    valueBox(paste(\"\"), \"Tax\",color = \"olive\")\n  })\n  \n  output$day_sales_mon<- renderGvis({\n    data2 <- data1()\n    if(length(data2) > 0)\n    {\n    Gross_sales<-data2$Gross_Sale\n    Date<-data2$Date\n    Total_sales<-data.frame(Date,Gross_sales)\n    totalsales<-gvisColumnChart(Total_sales,options=list(colors=\"['0099CC','CCFFCC','#BA4A00']\"))\n    return(totalsales)\n    }\n    \n  })\n  \n output$days_sales<- renderGvis({\n   daydata <- data1()\n   if(length(daydata) > 0)\n   {\n    Day<-daydata$Day\n    sales<-daydata$Sale\n    \n    y<-length(daydata$Day)\n    \n    sunTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='SUN')\n      {\n        sunTot<<-sunTot+daydata$Gross_Sale[i]\n      }\n      \n    }\n    # Sunday<-Sun\n    monTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='MON')\n      {\n        monTot<<-monTot+daydata$Gross_Sale[i]\n      }\n    }\n    #Monday<-Mon\n    tueTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='TUE')\n      {\n        tueTot<<-tueTot+daydata$Gross_Sale[i]\n      }\n    }\n    #Tuesday<-Tue\n    wedTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='WED')\n      {\n        wedTot<<-wedTot+daydata$Gross_Sale[i]\n      }\n    }\n    #Wednesday<-Wed\n    \n    thuTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='THU')\n      {\n        thuTot<<-thuTot+daydata$Gross_Sale[i]\n      }\n    }\n    #Thursday<-Thu\n    \n    friTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='FRI')\n      {\n        friTot<<-friTot+daydata$Gross_Sale[i]\n      }\n    }\n    #Friday<-Fri\n    satTot <<- 0\n    for(i in 1:y)\n    {\n      if(Day[i]=='SAT')\n      {\n        satTot<<-satTot+daydata$Gross_Sale[i]\n      }\n    }\n    Week<-c(sunTot,monTot,tueTot,wedTot,thuTot,friTot,satTot)\n    Days<-c(\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\")\n    totWeek<-cbind.data.frame(Days,Week)\n    #View(WeekDays)\n    Weeksales<-gvisColumnChart(totWeek,options=list(colors=\"['orange']\"))\n    return(Weeksales)\n   }\n })\n \n output$week_sales_charts<- renderGvis({\n   \n   \n   \n   weekendTot <-  sum(sunTot,satTot)\n   weekdaysTot <- sum(monTot,tueTot,wedTot,thuTot,friTot)\n   names<-c(\"weekendTot\",\"weekdaysTot\")\n   names=as.data.frame(names)\n   week2<-c(weekendTot,weekdaysTot)\n   week2=as.data.frame(week2)\n   salesdata1<-cbind.data.frame(names,week2)\n   highchart(width = 400, height = 400) %>% \n     hc_title(text = \"Weekend Vs Week Days\") %>%\n     \n     hc_chart(type = \"pie\", options3d = list(enabled = TRUE, alpha = 70, beta = 0)) %>% \n     hc_plotOptions(pie = list(depth = 70)) %>% \n     hc_add_series_labels_values(salesdata1$names, salesdata1$week2) %>% \n     hc_add_theme(hc_theme(\n       chart = list(\n         backgroundColor = NULL\n         \n       )\n     ))\n })\n \n  output$dine_walk<- renderGvis({\n    \n    data2 <- data1()\n    \n    if(length(data2) > 0)\n    {\n    Date<-data2$Date\n    \n    Dine_In<-data2$Dine_In\n    Walk_In<-data2$Walk_In\n    Total_walk_dine<-data.frame(Date,Dine_In,Walk_In)\n    walk_chart<-gvisLineChart(Total_walk_dine,options=list(colors=\"['0199CC','AAAAAC','#F#4A00']\"))\n    return(walk_chart)\n    }\n  })\n  \n  output$month_checks <- renderValueBox({\n    data2 <- data1()\n    if(length(data2) > 0)\n    valueBox(paste(round(sum(data2$Restaurant_Checks ))), \"Checks\", icon = icon(\"glyphicon glyphicon-user\",lib=\"glyphicon\"),color = \"green\")\n    else\n      valueBox(paste(\"\"), \"Checks\",color = \"green\")\n  })\n  \n  \n  output$Avg_Rev_per_day <- renderValueBox({\n    \n    data2 <- data1()\n  if(length(data2) > 0)\n   valueBox(paste(round(sum(data2$Gross_Sale)/nrow(data2),0)), \"Average Revenue per Day\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"red\")\n  else\n    valueBox(paste(\"\"), \"Average Revenue per Day\",color = \"red\")\n    \n  })\n  \n  output$monthly_home_delivaeries <- renderValueBox({\n    \n    data2 <- data1()\n    if(length(data2) > 0)\n    valueBox(paste(round(sum(data2$Delivery),0)), \"Home Deliveries\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"purple\")\n    else\n    valueBox(paste(\"\"), \"Home Deliveries\",color = \"purple\")\n  })\n  \n##################################################################################################################################################\n  ################# Day Sales ###########################\n  \n  data3 <- function(){\n    \n    inFile <- input$file2\n    if (is.null(inFile))\n      return(NULL)\n    daydata <- as.data.frame(read.csv(inFile$datapath))\n    return(daydata)\n  }\n  \n  \n   output$Top_Item<- renderValueBox({\n\n      daydata <- data3()\n      if(length(daydata) > 0)\n      valueBox(paste(round(max(daydata$TOTAL,0))), \"Top Item\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"red\")\n      else\n      valueBox(paste(\"\"), \"Top Item\",color = \"red\")\n      \n    })\n   \n  output$revenue<- renderValueBox({\n    \n    daydata <- data3()\n    if(length(daydata) > 0)\n    valueBox(paste(round(sum(daydata$  AMOUNT,0))),\"Revenue\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"green\")\n    else\n      valueBox(paste(\"\"), \"Revenue\",color = \"green\")\n  })\n  \n  output$tax_day<- renderValueBox({\n    \n    daydata <- data3()\n    if(length(daydata) > 0)\n    valueBox(paste(round(sum(daydata$  TAX_AMT,0))),\"Tax\", icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"navy\")\n    else\n      valueBox(paste(\"\"), \"Tax\",color = \"navy\")\n  })\n  \n  \n  output$BILL_DISCOUNT<- renderValueBox({\n    \n    daydata <- data3()\n    if(length(daydata) > 0)\n     valueBox(paste(round(sum(daydata$BILL_DISCOUNT,0))),\"Discount Amount\",icon = icon(\"glyphicon glyphicon-usd\",lib=\"glyphicon\"),color = \"fuchsia\")\n    else\n      valueBox(paste(\"\"), \"Discount Amount\",color = \"fuchsia\")\n  })\n  \n  \n  output$item_sales<- renderPlotly({\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 100,\n      t = 100,\n      pad = 4\n    )\n    \n    daydata <- data3()\n    if(length(daydata) > 0)\n    {\n    Category_Names<-as.list(daydata$Category_Names)\n    TOTAL<-as.list(daydata$TOTAL)\n    TAX_AMT<-as.list(daydata$TAX_AMT)\n    data<-data.frame(Category_Names,TAX_AMT)\n    p <- plot_ly(data, x = ~Category_Names, y = ~TOTAL, type = 'bar', name = 'Item_Total', marker = list(color = '#0000FF')) %>%\n      add_trace(y = ~TAX_AMT, name = 'Item_Tax', marker = list(color = '#7FFF0')) %>%\n      layout(autosize = F, width = 1250, height = 375, margin = m)\n    return(p)\n    }\n    else\n      return()\n      \n    })\n  \n  output$item_qty<- renderPlotly({\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 100,\n      t = 100,\n      pad = 4\n    )\n    \n    daydata <- data3()\n    \n    if(length(daydata) > 0)\n    {\n      Category_Names<-as.list(daydata$Category_Names)\n      QTY<-as.list(daydata$QTY)\n      \n      p<-plot_ly(daydata, x = ~Category_Names) %>%\n        \n        add_lines(y=~QTY, name = \"item_QTY\", visible = T)%>%\n      layout(autosize = F, width = 1200, height = 375, margin = m)\n      return(p)\n    }\n    else\n      return()\n    })\n  \n }",
    "created" : 1491215412459.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4224630684",
    "id" : "E7C16778",
    "lastKnownWriteTime" : 1491462989,
    "last_content_update" : 1491462989429,
    "path" : "C:/Users/Sudhakar/Desktop/Restaurent_POC/server.R",
    "project_path" : "server.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}