{
    "collab_server" : "",
    "contents" : "library(RMySQL)\nmydb = dbConnect(MySQL(),user='readonly',password='readonly123',dbname='slcawdb',host='183.82.106.91')\n\n\n####current month analysis for sales\nrs=dbSendQuery(mydb,'select year(sales_flat_order.updated_at) as year,\n                 month(sales_flat_order.updated_at) as month,\n                 day(sales_flat_order.updated_at) as day,\n                 \n                 sum(sales_flat_invoice.grand_total) as sales\n                 \n                 from sales_flat_order,sales_flat_invoice\n                 \n                 where sales_flat_order.entity_id=sales_flat_invoice.order_id  and year(sales_flat_order.updated_at)=2016 and month(sales_flat_order.updated_at)=3    \n                 \n                 group by date(sales_flat_order.updated_at)')\ndaywisesales= fetch(rs, n=-1) \n###current year analysis of sales\nYsales=dbSendQuery(mydb,'select year(sales_flat_order.updated_at) as Year,\n                 month(sales_flat_order.updated_at) as Month,\n              \n               sum(sales_flat_invoice.grand_total) as Sales\n               \n               from sales_flat_order,sales_flat_invoice\n               \n               where sales_flat_order.entity_id=sales_flat_invoice.order_id  and year(sales_flat_order.updated_at)=2016     \n               \n               group by Month(sales_flat_order.updated_at)')\nysalesval= fetch(Ysales, n=-1) \n#Query to find AverageOrderValue\n   #avg order value for a month in a year\nmAvg_Order=dbSendQuery(mydb,'select sum(grand_total)/count(*) as AvgOrderValue from sales_flat_order where status=\"complete\" and \nyear(sales_flat_order.updated_at)=2016 and month(sales_flat_order.updated_at)=3')\nmAvg_Value=fetch(mAvg_Order,n=-1)\n      ###avg order value for a year\nYAvg_Order=dbSendQuery(mydb,'select sum(grand_total)/count(*) as AvgOrderValue from sales_flat_order where status=\"complete\"')\nYAvg_Value=fetch(YAvg_Order,n=-1)\n#Queryto find revenue\n   ##revenue generated in a month\nmRevenueCal=dbSendQuery(mydb,'select sum(grand_total) from sales_flat_invoice where year(sales_flat_invoice.updated_at)=2016 and month(sales_flat_invoice.updated_at)=3')\nmRevenueval=fetch(mRevenueCal,n=-1)\n  ## ##revenue generated in a year\nyRevenueCal=dbSendQuery(mydb,'select sum(grand_total) from sales_flat_invoice where year(sales_flat_invoice.created_at)=2016')\nyRevenueval=fetch(yRevenueCal,n=-1)\n\n#Query to find Repeatedcustomers \n  ## repeated customers in a month\nmRepeatCust=dbSendQuery(mydb,'SELECT COUNT(*) AS grand_count FROM(\nSELECT customer_email FROM sales_flat_order\n                       WHERE sales_flat_order.status NOT LIKE \"canceled\"\n                       AND sales_flat_order.status NOT LIKE \"closed\"\n                       AND sales_flat_order.status NOT LIKE \"fraud\"\n                       AND sales_flat_order.status NOT LIKE \"holded\"\n                       AND sales_flat_order.status NOT LIKE \"paypal_canceled_reversal\"\n                       AND year(sales_flat_order.updated_at)=2016 \n                       AND month(sales_flat_order.updated_at)=3\n                       GROUP BY customer_email HAVING COUNT(*) > 1\n) s')\nmRepeatVal=fetch(mRepeatCust,n=-1)\n    ## repeated customers in a year\nyRepeatCust=dbSendQuery(mydb,'SELECT COUNT(*) AS grand_count FROM(\nSELECT customer_email FROM sales_flat_order\n                       WHERE sales_flat_order.status NOT LIKE \"canceled\"\n                       AND sales_flat_order.status NOT LIKE \"closed\"\n                       AND sales_flat_order.status NOT LIKE \"fraud\"\n                       AND sales_flat_order.status NOT LIKE \"holded\"\n                       AND sales_flat_order.status NOT LIKE \"paypal_canceled_reversal\"\n                       AND year(sales_flat_order.updated_at)=2016 \n                       GROUP BY customer_email HAVING COUNT(*) > 1\n) s')\nyRepeatVal=fetch(yRepeatCust,n=-1)\n#Calculating E-Commerce Ratio\n  ##for a month\nmVisits=dbSendQuery(mydb,\"select count(*) from log_visitor where month(log_visitor.first_visit_at)=3 and year(log_visitor.first_visit_at)=2016\")\nmVisitsval=fetch(mVisits,n=-1)\nmTransactions=dbSendQuery(mydb,\"select count(*) from sales_flat_order where status='complete' and month(sales_flat_order.created_at)=3 and year(sales_flat_order.created_at)=2016\")\nmTrValue=fetch(mTransactions,n=-1)\nmERatio=mTrValue/mVisitsval\n\n    ##for a year\nyVisits=dbSendQuery(mydb,\"select count(*) from log_visitor where year(log_visitor.first_visit_at)=2016\")\nyVisitsval=fetch(yVisits,n=-1)\nyTransactions=dbSendQuery(mydb,\"select count(*) from sales_flat_order where status='complete'  and year(sales_flat_order.created_at)=2016\")\nyTrValue=fetch(yTransactions,n=-1)\nyERatio=yTrValue/yVisitsval\n##Revenue of a perticular month in all years\n\nRevenueMarch=dbSendQuery(mydb,'select sum(grand_total) as Revenue ,Month(created_at) as Month,Year(created_at) as Year from sales_flat_order where Month(created_at) =3 group by  Year(created_at)')\nRevenueMarchVal=fetch(RevenueMarch,n=-1)\n\n##Sales of an item by location in a month\n\nmsaleLoc=dbSendQuery(mydb,'select sum(sales_flat_order.grand_total) as Revenue ,sales_flat_order_address.region as Location from \n                    sales_flat_order,sales_flat_order_address where sales_flat_order.entity_id=sales_flat_order_address.parent_id  and YEAR(sales_flat_order.created_at)=2016 and Month(sales_flat_order.created_at)=3 group by \n                    sales_flat_order_address.region')\nmsalelocval=fetch(msaleLoc,n=-1)\n##Sales of an item among  the year by location \nysaleLocY=dbSendQuery(mydb,'select sum(sales_flat_order.grand_total) as Revenue ,sales_flat_order_address.region as Location from \n                    sales_flat_order,sales_flat_order_address where sales_flat_order.entity_id=sales_flat_order_address.parent_id and YEAR(sales_flat_order.created_at)=2016 group by \n                     sales_flat_order_address.region ')\nysalelocvaly=fetch(ysaleLocY,n=-1)\n\n##Revenue of items among all the years\nyrevenue=dbSendQuery(mydb,'select sum(grand_total) as Revenue ,\n                            Month(created_at) as Month,\n                            Year(created_at) as Year\n                            from sales_flat_order \n                            \n                            group by  Year\n                            ')\nyRevenue=fetch(yrevenue,n=-1)\n\n##### calculating top product in a month  \n\nmTopProduct = dbSendQuery(mydb,'select sum(sales_flat_quote_item.qty) as TotalQty, \n                 sales_flat_quote_item.product_id, sales_flat_quote_item.name \n                 from sales_flat_quote_item,sales_flat_order_item \n                 where YEAR(sales_flat_quote_item.updated_at) = 2016 AND MONTH(sales_flat_quote_item.updated_at)=3 AND\n\t\tsales_flat_quote_item.product_id = sales_flat_order_item.product_id \n                 group by sales_flat_quote_item.product_id')\n\nmtopproduct= fetch(mTopProduct, n=-1)  \nmaxQty<-max(mtopproduct$TotalQty)\n############calculating top product in a year\n##### \n\nyTopProduct = dbSendQuery(mydb,'select sum(sales_flat_quote_item.qty) as TotalQty, \n                 sales_flat_quote_item.product_id, sales_flat_quote_item.name \n                          from sales_flat_quote_item,sales_flat_order_item \n                          where YEAR(sales_flat_quote_item.updated_at) = 2016  AND\n                          sales_flat_quote_item.product_id = sales_flat_order_item.product_id \n                          group by sales_flat_quote_item.product_id')\n\nytopproduct= fetch(yTopProduct, n=-1)  \nymaxQty<-max(ytopproduct$TotalQty)\n\n####inventory Turnover=Cost of Goods Sold  /  Average Inventory \n ##per month\nmturnover = dbSendQuery(mydb,'select sum(sales_flat_order.grand_total) as OrderTotal from\n  sales_flat_order,sales_flat_invoice\n                       where \n                       sales_flat_order.entity_id=sales_flat_invoice.order_id and\n                      Year(sales_flat_order.created_at)=2016 and Month(sales_flat_order.created_at)=3 and\n                       sales_flat_order.status=\"complete\"')\nmIturnover= fetch(mturnover, n=-1)\nminventurnover<-sum(mIturnover$OrderTotal)\n####Inventory Turnover per  year\n\nyturnover = dbSendQuery(mydb,'select sum(sales_flat_order.grand_total) as OrderTotal from\n                        sales_flat_order,sales_flat_invoice\n                        where \n                        sales_flat_order.entity_id=sales_flat_invoice.order_id and\nYear(sales_flat_order.created_at)=2016 and \n                        sales_flat_order.status=\"complete\"')\nyIturnover= fetch(yturnover, n=-1)\nyinventurnover<-sum(yIturnover$OrderTotal)\n###Revenue By Product Category\nRbycat=dbSendQuery(mydb,'SELECT sum(`qty`) as qty, sum(`total_price`) as Revenue, category_id FROM (SELECT sum(`qty_ordered`) as qty, sum(`row_total`) as total_price, sales_flat_order_item.product_id, catalog_category_product.category_id  FROM `sales_flat_order_item`\nINNER JOIN catalog_category_product ON catalog_category_product.product_id = sales_flat_order_item.product_id\n                   GROUP BY sales_flat_order_item.product_id order by catalog_category_product.category_id desc) as resTable GROUP BY category_id')\nRbycatval=fetch(Rbycat,n=-1)\n\n######Inventory sales by location in a month#####\n\nmInventsales= dbSendQuery(mydb,'select \n                         sales_flat_order_address.region as Location,\n                         (sales_flat_invoice.total_qty) as QuantityOrdered\n                         \n                         from sales_flat_order,sales_flat_order_address,sales_flat_invoice\n                         \n                         where sales_flat_order.entity_id=sales_flat_order_address.parent_id   \n                         \n                         and  sales_flat_order.entity_id=sales_flat_invoice.order_id  \nand year(sales_flat_order.created_at)=2016 and month(sales_flat_order.created_at)=3\n                         \n                         group by sales_flat_order_address.region')\n\n\nmIsalesbyRegion = fetch(mInventsales, n=-1)\n######Inventory sales by location in a year#####\n\nyInventsales= dbSendQuery(mydb,'select \n                         sales_flat_order_address.region as Location,\n                         (sales_flat_invoice.total_qty) as QuantityOrdered\n                         \n                         from sales_flat_order,sales_flat_order_address,sales_flat_invoice\n                         \n                         where sales_flat_order.entity_id=sales_flat_order_address.parent_id   \n                         \n                         and  sales_flat_order.entity_id=sales_flat_invoice.order_id  and\n                             year(sales_flat_order.created_at)=2016 \n                         \n                         group by sales_flat_order_address.region')\n\n\nyIsalesbyRegion = fetch(yInventsales, n=-1)\n\n##### units per transaction in month ########\nmtotalUnitSold = dbSendQuery(mydb,'select sum(sales_flat_invoice_item.qty) as TotalQty\n                            from sales_flat_invoice_item,sales_flat_order,sales_flat_invoice\n                             where YEAR(sales_flat_order.updated_at)=2016 and MONTH(sales_flat_order.updated_at)=3 and\n                             sales_flat_order.entity_id = sales_flat_invoice.order_id and \n                             sales_flat_invoice.entity_id=sales_flat_invoice_item.parent_id and\n                             sales_flat_order.status=\"complete\"')\n\nmtotUnitsSold = fetch(mtotalUnitSold, n=-1)\n\nmTransactions=dbSendQuery(mydb,'select count(*) from sales_flat_order where YEAR(updated_at)=2016 and MONTH(updated_at)=3 and status=\"complete\"')\n\nmtotalTransactions=fetch(mTransactions,n=-1)\n\nmunitspertransaction<-mtotUnitsSold/mtotalTransactions\n################units per transactions in year################\nytotalUnitSold = dbSendQuery(mydb,'select sum(sales_flat_invoice_item.qty) as TotalQty\n                            from sales_flat_invoice_item,sales_flat_order,sales_flat_invoice\n                             where YEAR(sales_flat_order.updated_at)=2016  and\n                             sales_flat_order.entity_id = sales_flat_invoice.order_id and \n                             sales_flat_invoice.entity_id=sales_flat_invoice_item.parent_id and\n                             sales_flat_order.status=\"complete\"')\n\nytotUnitsSold = fetch(ytotalUnitSold, n=-1)\n\nyTransactions=dbSendQuery(mydb,'select count(*) from sales_flat_order where YEAR(updated_at)=2016  and status=\"complete\"')\n\nytotalTransactions=fetch(yTransactions,n=-1)\n\nyunitspertransaction<-ytotUnitsSold/ytotalTransactions\n\n###################supply chain#########################\n      ####in a month\nmsupplychain=dbSendQuery(mydb,'select sum(sales_flat_invoice.total_qty) as UnitsOrdered,day(sales_flat_shipment.created_at) as Day,\nsales_flat_order.`status`,sum(sales_flat_shipment.total_qty) as UnitsShipped,sales_flat_shipment.created_at from\n                         sales_flat_invoice,sales_flat_order,sales_flat_shipment\n                         where\n                         sales_flat_invoice.order_id=sales_flat_order.entity_id\n                         and \n                         sales_flat_invoice.order_id=sales_flat_shipment.order_id\n                         and\n                         sales_flat_order.`status`=\"complete\"\n                         and year(sales_flat_shipment.updated_at)=2016 and month(sales_flat_shipment.created_at)=3\n                         group by day(sales_flat_shipment.created_at)\n                         ')\nmsupplychainval=fetch(msupplychain,n=-1)\n\n#################in a year\nysupplychain=dbSendQuery(mydb,'select sum(sales_flat_invoice.total_qty) as UnitsOrdered,Month(sales_flat_shipment.created_at) as Month,\nsales_flat_order.`status`,sum(sales_flat_shipment.total_qty) as UnitsShipped,sales_flat_shipment.created_at from\n                         sales_flat_invoice,sales_flat_order,sales_flat_shipment\n                         where\n                         sales_flat_invoice.order_id=sales_flat_order.entity_id\n                         and \n                         sales_flat_invoice.order_id=sales_flat_shipment.order_id\n                         and\n                         sales_flat_order.`status`=\"complete\"\n                         and year(sales_flat_shipment.updated_at)=2016 \n                         group by Month(sales_flat_shipment.created_at)\n                         ')\nysupplychainval=fetch(ysupplychain,n=-1)\n",
    "created" : 1487581397888.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4073345350",
    "id" : "84EC899A",
    "lastKnownWriteTime" : 1487601884,
    "last_content_update" : 1487601884052,
    "path" : "F:/ShineyWorkSpace/SLC_POC/Slc_Connect.R",
    "project_path" : "Slc_Connect.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}