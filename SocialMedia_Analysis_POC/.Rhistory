add_trace(y = ~y2, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 100),
barmode = 'group')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="bar/rotated")
chart_link
x <- c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December')
y1 <- c(20, 14, 25, 16, 18, 22, 19, 15, 12, 16, 14, 17)
y2 <- c(19, 14, 22, 14, 16, 19, 15, 14, 10, 12, 12, 16)
data <- data.frame(x, y1, y2)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y1, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~y2, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 100),
barmode = 'group')
chart_link = plotly_POST(p, filename="bar/rotated")
chart_link
p
p
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 100),
barmode = 'group')
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 1),
barmode = 'group')
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 200),
barmode = 'group')
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
barmode = 'group')
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 200),
barmode = 'group')
p <- ggplot2::country_count_likes %>% count(NumberOfLikes, country_count_likes$count) %>%
plot_ly(x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, color = ~clarity)
plot_ly(x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, color = ~clarity)
plot_ly(x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes)
View(country_count_likes)
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 200),
barmode = 'group')
plot_ly(country_count_likes, x = ~country_count_likes$sf.country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 200),
barmode = 'group')
runApp()
plot_ly(country_count_likes, x = ~country_count_likes$country, y = ~country_count_likes$NumberOfLikes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%
#add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%
layout(xaxis = list(title = "", tickangle = -45),
yaxis = list(title = ""),
margin = list(b = 200),
barmode = 'group')
runApp()
View(Post_count_hour)
runApp()
page1<- getPage("ebay", since = as.character(Sys.Date()-7), until = as.character(Sys.Date()), token, n = 100)
library("Rfacebook", lib.loc="~/R/R-3.3.3/library")
page1<- getPage("ebay", since = as.character(Sys.Date()-7), until = as.character(Sys.Date()), token, n = 100)
token<-"EAACEdEose0cBAJoulB89OlETRnRck96KN3d6B4HR0esSpZBkfOaYiY8JVLZA42xKqlS0SAy69OGJ98jDs2g433bJVXsmMRSnsFpSMxTxaovuHY0dpKWNpPknwDtvEwf4Cgum9hGsG9oLCOHQCe339MHY8ZAUKZBfnlm9T4uhnmThW7bjMgwud7AWwdPvfd0ZD"
page1<- getPage("ebay", since = as.character(Sys.Date()-7), until = as.character(Sys.Date()), token, n = 100)
View(page1)
page1$time <- as.POSIXct(page1$created_time,origin="Sys.Date()")
page1<- getPage("ebay", since = as.character(Sys.Date()-7), until = as.character(Sys.Date()), token, n = 100)
page1$time <- as.POSIXct(page1$created_time,origin="Sys.Date()")
likesperweek <-data.frame(sum(page1$likes_count))
commentsperweek<-data.frame(sum(page1$comments_count))
sharesperweek<-data.frame(sum(page1$shares_count))
postsperweek<-data.frame(count(page1$id))
posts1perweek<-data.frame(sum(lastweekposts$freq))
runApp()
runApp()
runApp()
runApp()
count_df$Time <- as.POSIXct(count_df$Time, format = "%H:%M:%S",size=4)
View(count_df)
count_df$Time<-as.caharacter(count_df$Time)
count_df$Time<-as.character(count_df$Time)
highchart() %>%
hc_chart(type = "line") %>%
hc_xAxis(categories = count_df$Time) %>%
hc_add_series(name = "Tweets per Minute", data = count_df$Freq,color = "#B71C1C")
runApp()
user1<-getUser('ebay')
Followerscount<-user1$getFollowersCount()
Recenttop10frnds<-user1$getFriends(n=10)
Recenttop10frnds<-twListToDF(Recenttop10frnds)
Favouritescount<-user1$getFavouritesCount()
library("twitteR", lib.loc="~/R/R-3.3.3/library")
user1<-getUser('ebay')
Followerscount<-user1$getFollowersCount()
Recenttop10frnds<-user1$getFriends(n=10)
Recenttop10frnds<-twListToDF(Recenttop10frnds)
Favouritescount<-user1$getFavouritesCount()
api_key<-"KyYm719eKWCz15KBkJVA2G82g"
api_secret<-"LE8EDB5qByktXujkyAj5dlI5R8u7fAE7t1wE1Yogmg0gzkj4Wz"
access_token<-"2380143139-QB6qWurXS1bGEqFNbfASCOULIUDymBPsIFYaw2m"
access_token_secret<-"obg5agkjQRUofLtuaFz1F71sDbSFR5sQOyT8lquBal88R"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
user1<-getUser('ebay')
Followerscount<-user1$getFollowersCount()
Recenttop10frnds<-user1$getFriends(n=10)
Recenttop10frnds<-twListToDF(Recenttop10frnds)
Favouritescount<-user1$getFavouritesCount()
runApp()
runApp()
library(googleVis)
library("googleVis", lib.loc="~/R/R-3.3.3/library")
library("googleVis", lib.loc="~/R/R-3.3.3/library")
runApp()
runApp()
View(twf)
runApp()
Recenttop10frnds<-data.frame(Recenttop10frnds$name,Recenttop10frnds$location,Recenttop10frnds$friendsCount,Recenttop10frnds$followersCount,Recenttop10frnds$favoritesCount)
View(Recenttop10frnds)
runApp()
colnames(Recenttop10frnds)<-c("name","location","friendsCount","Followerscount","favouriteCount")
runApp()
colnames(Recenttop10frnds)<-c("name","location","friendsCount","Followerscount","favouriteCount")
runApp()
colnames(Recenttop10frnds)<-c("name","location","friendsCount","Followerscount","Favouritescount")
runApp()
Recenttop10frnds
class(Recenttop10frnds)
runApp()
runApp()
revqty
revqty<- select(Recenttop10frnds,name,location,friendsCount,Followerscount,Favouritescount)
#revqty<- select(Recenttop10frnds,Brand,Revenue,LastMonthSales,SalesGrowth)
revqtychart<-gvisTable(revqty,options=list(height="300px"))
# return(revqtychart)
runApp()
View(revqty)
revqtychart<-gvisTable(revqty,options=list(height="300px"))
View(revqtychart)
colnames(Recenttop10frnds)<-c("name","location","Friendscount","Followerscount","Favouritescount")
runApp()
runApp()
runApp()
runApp()
count_hour
View(count_hour)
highchart() %>%
hc_add_series_boxplot(x = count_hour$Freq, by = count_hour$Time, name = "Tweets per Hour")
runApp()
colnames(Post_count_hour)<-c("Time","Freq")
View(Post_count_hour)
Post_count_hour <- cbind(newColName = rownames(Post_count_hour),Post_count_hour)
rownames(Post_count_hour) <- 1:nrow(Post_count_hour)
colnames(Post_count_hour)<-c("Time","Freq")
View(Post_count_hour)
post24$format <- strptime(post24$created_time,"%FT%T")
post24$format<- as.POSIXct(post24$format,format ="%d-%m-%Y%H:%M:%S", tz="")
post24$hrmise <- sub(".* ", "", post24$format)
post.df1<-as.data.frame(cbind(post24$hrmise,1),stringsAsFactors=FALSE)
colnames(post.df1)<-c("time","freq")
x <- as.POSIXct(post.df1$time,"%H:%M:%S",tz="")
by.hour <- cut.POSIXt(x,"hour")
View(table(by.hour))
post.hour <- split(post.df1, by.hour)
Post_count_hour<-as.data.frame((sapply(post.hour,function(x)sum(as.integer(x$freq)))))
Post_count_hour <- cbind(newColName = rownames(Post_count_hour),Post_count_hour)
View(Post_count_hour)
rownames(Post_count_hour) <- 1:nrow(Post_count_hour)
colnames(Post_count_hour)<-c("Time","Freq")
View(Post_count_hour)
highchart() %>%
hc_chart(type = "line") %>%
hc_xAxis(categories = Post_count_hour$Time) %>%
hc_add_series(name = "Number of Posts", data = Post_count_hour$Freq,color = "#B71C1C")
runApp()
dd<-max(twf$retweetCount)
dd
dd<-data.frame(dd)
View(dd)
setnames(dd,old='dd',new='Retweetcount')
View(twf)
dd1<-which(twf$retweetCount == max(twf$retweetCount))
toptweet<-twf$text[which(twf$retweetCount == max(twf$retweetCount))]
toptweet<-data.frame(toptweet)
View(toptweet)
runApp()
library("ggplot2", lib.loc="~/R/R-3.3.3/library")
runApp()
setDT(Recenttop10frnds)
class(Recenttop10frnds)
Recenttop10frnds<-setDT(Recenttop10frnds)
class(Recenttop10frnds)
output$mytable1 = renderDataTable({
library(ggplot2)
Recenttop10frnds[, input$show_vars, drop = FALSE]
})
library("DT", lib.loc="~/R/R-3.3.3/library")
output$mytable1 <- renderDataTable({
library(ggplot2)
Recenttop10frnds[, input$show_vars, drop = FALSE]
})
View(Recenttop10frnds)
runApp()
runApp()
runApp()
revqty<- select(Recenttop10frnds,name,location,Friendscount,Followerscount,Favouritescount)
runApp()
runApp()
runApp()
library(leaflet)
library(shiny)
library(shinydashboard)
library(plotrix)
library(plotly)
library(metricsgraphics)
library(googleVis)
library(highcharter)
library(gender)
#library(genderizeR)
library(plotrix)
runApp()
runApp()
runApp()
getwd()
shiny::runApp()
View(user1)
runApp()
colnames(Recenttop10frnds)<-c("name","location","Followingcount","Followerscount","Likescount")
Recenttop10frnds<-setDT(Recenttop10frnds)
library(DT)
Recenttop10frnds<-setDT(Recenttop10frnds)
library(DT)
Recenttop10frnds<-setDT(Recenttop10frnds)
install.packages("DT")
?setDT
library(data.table)
library(tm)
library(wordcloud)
library(syuzhet)
library(ggplot2)
library(dplyr )
library(NLP)
library(twitteR)
library(ggmap)
library(plyr)
library(stringr)
library(RColorBrewer)
library(Rfacebook)
library(stringr)
library(reshape2)
library(leaflet)
library(R2WinBUGS)
library(gender)
library(qdap)
library(data.table)
library(scales)
library(lubridate)
library(ROAuth)
library(httr)
library(lubridate)
library(chron)
library(devtools)
# install_github("pablobarbera/NYU-AD-160J/NYU160J")
library(NYU160J)
library(xts)
library(stringi)
library(SciencesPo)
library(RNeo4j)
library(xts)
library(DT)
Recenttop10frnds<-setDT(Recenttop10frnds)
colnames(Recenttop10frnds)<-c("name","location","Followingcount","Followerscount","Likescount")
Recenttop10frnds<-setDT(Recenttop10frnds)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
tweet <- userTimeline("eBay", n=1000)
tweets.df<-twListToDF(tweets)
tweets.df$format<- as.POSIXct(tweets.df$created,format ="%d-%m-%Y%H:%M:%S", tz="")
ts1=xts(tweets.df$retweetCount,tweets.df$format)
ts1.sum_weekly=apply.weekly(ts1,sum)
sum.weekly=data.frame(date=index(ts1.sum_weekly), coredata(ts1.sum_weekly))
colnames(sum.weekly)=c('weekly','sum')
View(sum.weekly)
index<-nrow(sum.weekly)
RetweetcountWeek<-sum.weekly$sum[index]
tweet <- userTimeline("eBay", n=1000)
library(tm)
library(wordcloud)
library(syuzhet)
library(ggplot2)
library(dplyr )
library(NLP)
library(twitteR)
library(ggmap)
library(plyr)
library(stringr)
library(RColorBrewer)
library(Rfacebook)
library(stringr)
library(reshape2)
library(leaflet)
library(R2WinBUGS)
library(gender)
library(qdap)
library(data.table)
library(scales)
library(lubridate)
library(ROAuth)
library(httr)
library(lubridate)
library(chron)
library(devtools)
# install_github("pablobarbera/NYU-AD-160J/NYU160J")
library(NYU160J)
library(xts)
library(stringi)
library(SciencesPo)
library(RNeo4j)
library(xts)
library(DT)
tweet <- userTimeline("eBay", n=1000)
tweets.df<-twListToDF(tweets)
tweets.df$format<- as.POSIXct(tweets.df$created,format ="%d-%m-%Y%H:%M:%S", tz="")
ts1=xts(tweets.df$retweetCount,tweets.df$format)
ts1.sum_weekly=apply.weekly(ts1,sum)
sum.weekly=data.frame(date=index(ts1.sum_weekly), coredata(ts1.sum_weekly))
colnames(sum.weekly)=c('weekly','sum')
View(sum.weekly)
index<-nrow(sum.weekly)
RetweetcountWeek<-sum.weekly$sum[index]
ts=xts(tweets.df$favoriteCount,tweets.df$format)
ts.sum_weekly_likes=apply.weekly(ts,sum)
sum.weekly_likes=data.frame(date=index(ts.sum_weekly_likes), coredata(ts.sum_weekly))
colnames(sum.weekly_likes)=c('weekly_likes','sum_likes')
View(sum.weekly_likes)
index<-nrow(sum.weekly_likes)
lastweeklikescount<-sum.weekly_likes$sum_likes[index]
ts=xts(tweets.df$favoriteCount,tweets.df$format)
ts.sum_weekly_likes=apply.weekly(ts,sum)
sum.weekly_likes=data.frame(date=index(ts.sum_weekly_likes), coredata(ts.sum_weekly_likes))
colnames(sum.weekly_likes)=c('weekly_likes','sum_likes')
View(sum.weekly_likes)
index<-nrow(sum.weekly_likes)
lastweeklikescount<-sum.weekly_likes$sum_likes[index]
runApp()
runApp()
runApp()
runApp()
runApp()
lastweeklikescount
RetweetcountWeek
runApp()
shiny::runApp()
tweet <- userTimeline("eBay", n=1000)
tweets.df<-twListToDF(tweets)
tweets.df$format<- as.POSIXct(tweets.df$created,format ="%d-%m-%Y%H:%M:%S", tz="")
ts1=xts(tweets.df$retweetCount,tweets.df$format)
ts1.sum_weekly=apply.weekly(ts1,sum)
sum.weekly=data.frame(date=index(ts1.sum_weekly), coredata(ts1.sum_weekly))
colnames(sum.weekly)=c('weekly','sum')
View(sum.weekly)
index<-nrow(sum.weekly)
RetweetcountWeek<-sum.weekly$sum[index]
#########################Aggrigate of Twitter Likes  Last week####
ts=xts(tweets.df$favoriteCount,tweets.df$format)
ts.sum_weekly_likes=apply.weekly(ts,sum)
sum.weekly_likes=data.frame(date=index(ts.sum_weekly_likes), coredata(ts.sum_weekly_likes))
colnames(sum.weekly_likes)=c('weekly_likes','sum_likes')
View(sum.weekly_likes)
index<-nrow(sum.weekly_likes)
lastweeklikescount<-sum.weekly_likes$sum_likes[index]
library(tm)
library(wordcloud)
library(syuzhet)
library(ggplot2)
library(dplyr )
library(NLP)
library(twitteR)
library(ggmap)
library(plyr)
library(stringr)
library(RColorBrewer)
library(Rfacebook)
library(stringr)
library(reshape2)
library(leaflet)
library(R2WinBUGS)
library(gender)
library(qdap)
library(data.table)
library(scales)
library(lubridate)
library(ROAuth)
library(httr)
library(lubridate)
library(chron)
library(devtools)
# install_github("pablobarbera/NYU-AD-160J/NYU160J")
library(NYU160J)
library(xts)
library(stringi)
library(SciencesPo)
library(RNeo4j)
library(xts)
library(DT)
tweet <- userTimeline("eBay", n=1000)
tweets.df<-twListToDF(tweets)
tweets.df$format<- as.POSIXct(tweets.df$created,format ="%d-%m-%Y%H:%M:%S", tz="")
ts1=xts(tweets.df$retweetCount,tweets.df$format)
ts1.sum_weekly=apply.weekly(ts1,sum)
sum.weekly=data.frame(date=index(ts1.sum_weekly), coredata(ts1.sum_weekly))
colnames(sum.weekly)=c('weekly','sum')
View(sum.weekly)
index<-nrow(sum.weekly)
RetweetcountWeek<-sum.weekly$sum[index]
#########################Aggrigate of Twitter Likes  Last week####
ts=xts(tweets.df$favoriteCount,tweets.df$format)
ts.sum_weekly_likes=apply.weekly(ts,sum)
sum.weekly_likes=data.frame(date=index(ts.sum_weekly_likes), coredata(ts.sum_weekly_likes))
colnames(sum.weekly_likes)=c('weekly_likes','sum_likes')
View(sum.weekly_likes)
index<-nrow(sum.weekly_likes)
lastweeklikescount<-sum.weekly_likes$sum_likes[index]
api_key<-"KyYm719eKWCz15KBkJVA2G82g"
api_secret<-"LE8EDB5qByktXujkyAj5dlI5R8u7fAE7t1wE1Yogmg0gzkj4Wz"
access_token<-"2380143139-QB6qWurXS1bGEqFNbfASCOULIUDymBPsIFYaw2m"
access_token_secret<-"obg5agkjQRUofLtuaFz1F71sDbSFR5sQOyT8lquBal88R"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
tweet <- searchTwitter("eBay", n=1000,lang="en")
tweets.text <- lapply(tweet, function(t)t$getText())
tweet <- userTimeline("eBay", n=1000)
tweets.df<-twListToDF(tweets)
tweets.df$format<- as.POSIXct(tweets.df$created,format ="%d-%m-%Y%H:%M:%S", tz="")
ts1=xts(tweets.df$retweetCount,tweets.df$format)
ts1.sum_weekly=apply.weekly(ts1,sum)
sum.weekly=data.frame(date=index(ts1.sum_weekly), coredata(ts1.sum_weekly))
colnames(sum.weekly)=c('weekly','sum')
View(sum.weekly)
index<-nrow(sum.weekly)
RetweetcountWeek<-sum.weekly$sum[index]
#########################Aggrigate of Twitter Likes  Last week####
ts=xts(tweets.df$favoriteCount,tweets.df$format)
ts.sum_weekly_likes=apply.weekly(ts,sum)
sum.weekly_likes=data.frame(date=index(ts.sum_weekly_likes), coredata(ts.sum_weekly_likes))
colnames(sum.weekly_likes)=c('weekly_likes','sum_likes')
View(sum.weekly_likes)
index<-nrow(sum.weekly_likes)
lastweeklikescount<-sum.weekly_likes$sum_likes[index]
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(country_count_likes)
country_count_likes1<-country_count_likes[ ,-c(3,4)]
View(country_count_likes1)
colnames(country_count_likes1)<- c("Country","Likes")
View(country_count_likes1)
runApp()
runApp()
View(posneg)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
country_likes_color<-nrow(country_count_likes1)
country_likes_color
runApp()
runApp()
runApp()
runApp()
