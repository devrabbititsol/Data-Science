{
    "collab_server" : "",
    "contents" : "library(leaflet)\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(plotrix)\nlibrary(plotly)\nlibrary(metricsgraphics)\nlibrary(googleVis)\nlibrary(highcharter)\nlibrary(gender)\nlibrary(genderizeR)\n\n  \n\nserver <- function(input, output, session) {\n  \n  output$followerscount <- renderValueBox({\n    valueBox(\n      paste(Followerscount), \"Favourites Count of Ebay\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"teal\"\n      \n    )\n  })\n  \n  output$favouritescount <- renderValueBox({\n    valueBox(\n      paste(Favouritescount), \"Followers Count of Ebay\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"red\"\n      \n    )\n  })\n  \n  \n  \n  output$lastweekposts <- renderValueBox({\n    valueBox(\n      paste(lastweekposts1), \"Last Week Posts\",icon = icon(\"glyphicon glyphicon-list-alt\",lib=\"glyphicon\"),\n      color = \"green\"\n      \n    )\n  })\n  \n  output$lastweeklikes <- renderValueBox({\n    valueBox(\n      paste(lastweeklikes), \"Last Week Likes\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"red\"\n      \n    )\n  })\n  \n  output$lastweekcmnts <- renderValueBox({\n    valueBox(\n      paste(lastweekcomments), \"Last Week Comments\",icon = icon(\"glyphicon glyphicon-comment\",lib=\"glyphicon\"),\n      color = \"teal\"\n      \n    )\n  })\n  \n  output$lastweekshares <- renderValueBox({\n    valueBox(\n      paste(lastweekshares), \"Last Week Shares\",icon = icon(\"glyphicon glyphicon-send\",lib=\"glyphicon\"),\n      color = \"yellow\"\n      \n    )\n  })\n  \n  \n\n  observeEvent(input$Map_marker_click, { # update the map markers and view on map clicks\n    p <- input$Map_marker_click\n    proxy <- leafletProxy(\"mymap\")\n    if(p$id==\"Selected\"){\n      proxy %>% removeMarker(layerId=\"Selected\")\n    } else {\n      proxy %>% setView(lng=p$lng, lat=p$lat, input$Map_zoom) %>% acm_defaults(p$lng, p$lat)\n    }\n  })\n  observeEvent(input$Map_marker_click, { # update the location selectInput on map clicks\n    p <- input$Map_marker_click\n    if(!is.null(p$id)){\n      if(is.null(input$location) || input$location!=p$id) updateSelectInput(session, \"location\", selected=p$id)\n    }\n  })\n  \n\n\n  \n    output$mymap <- renderLeaflet({\n      \n      \n      \n     longlat<-longlat\n      \n   \n     leaflet(data=longlat) %>%\n       addTiles(urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n                                       \n                                       attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>') %>%\n      \n        addMarkers(data =longlat, lng = longlat$lon, lat = longlat$lat, popup = longlat$cities) %>%\n        \n       setView(lng = -93.85, lat = 37.45, zoom = 2) %>%\n       addProviderTiles(providers$Stamen.TonerLite,\n                        options = providerTileOptions(noWrap = TRUE))\n      \n    })\n    \n   \n  \n  output$mymap1 <- renderLeaflet({\n    \n   \n    leaflet() %>%addTiles(urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n                                      \n                                      attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>') %>%\n addCircleMarkers(data = longlat1, lat = ~longlat1$lat, lng = ~longlat1$lon,popup = longlat$cities) %>%\n      setView(lng = -93.85, lat = 37.45, zoom = 2) %>%\n     addProviderTiles(providers$Stamen.TonerLite,\n                      options = providerTileOptions(noWrap = TRUE))\n\n\n  })\n  output$mymap3<- renderPlotly({\n\n   slices<-slices\n\n    #colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')\n\n    p <- plot_ly(slices2, labels = ~Gender, values = ~gender_pctg, type = 'pie') %>%\n    layout(title = 'Gender wise Posts on Facebook for ebay ',\n           xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n           yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n    \n           p\n  })\n  \n \n  output$hour<-renderHighchart({\n    \n      \n   \n    highchart() %>%\n      hc_add_series_boxplot(x = count_hour$Freq, by = count_hour$time, name = \"Tweets per Hour\")\n    \n     \n      \n})\n\n \n  \n  \n  output$mymap6<- renderHighchart({\n\n    highchart() %>%\n      hc_chart(type = \"line\") %>%\n      hc_xAxis(categories=count_df$Time) %>%\n      hc_add_series(name = \"Number of Posts\", data =count_df$Freq,color = \"#B71C1C\") \n })\n  \n  \n \n  \n  \n  \n \n \n\n# output$totalcount <- renderGvis({\n#   #df2 <- data.frame(Label = \"Model Accuracy\", Value = input$n2)\n#   gvisGauge(cnt,\n#             options=list(min=0, max=450, greenFrom=90,\n#                          greenTo=100, yellowFrom=75, yellowTo=89.99,\n#                          redFrom=0, redTo=74.99, width=400, height=400));  \n#                          \n#   \n# })\n# }\n# \n# \n\n\n\noutput$plotwc<- renderPlot({\n  \n  \n  \n  wordcloud(d$word,d$freq,scale=c(10,0.5)\n            ,max.words=100,height=500,width=500,\n            random.order=FALSE,rot.per=0.30, use.r.layout=TRUE, colors=brewer.pal(8, \"Dark2\"))\n \n  \n  \n})\n\noutput$plotwc3<- renderHighchart({\n\n  highchart() %>%\n    hc_chart(type=\"area\") %>%\n    \n    hc_xAxis(categories=country_count_likes$country,\n             title = list(text = \"Region Names\")) %>%\n    hc_yAxis(\n      title = list(text = \"PostsCount and Number of likes\")\n      \n    ) %>%\n   \n    hc_add_series(name = \"Count\", data =country_count_likes$count,type = \"area\",color=\"red\") %>%\n    hc_add_series(name = \"Number of Likes\", data = country_count_likes$NumberOfLikes,type = \"area\",color=\"blue\") %>%\n                  \n  \n  hc_add_theme(hc_theme_sandsignika())\n  \n  })\n  \n  \n\noutput$Rev_curr<- renderGvis({\n  revqty<- select(Recenttop10frnds,name,location,friendsCount,followersCount)\n  revqtychart<-gvisTable(revqty,options=list(height=\"300px\"))\n  return(revqtychart)\n  \n})\n\noutput$plotwc10<- renderPlotly({\n\np<-ggplot(twf, aes(factor(!is.na(replyToSID)))) +\n  geom_bar(fill = \"midnightblue\") +\n  theme(legend.position=\"none\", axis.title.x = element_blank()) +\n  ylab(\"Number of tweets\") +\n  ggtitle(\"Replied Tweets\") +\n  scale_x_discrete(labels=c(\"Not in reply\", \"Replied tweets\"))\n\np\n})\n\n\noutput$plotwc1<- renderPlot({\n  \n  \n  \n  wordcloud(d1$word,d1$freq,scale=c(10,0.5)\n            ,max.words=100,height=500,width=500,\n            random.order=FALSE,rot.per=0.30, use.r.layout=TRUE, colors=brewer.pal(8, \"Dark2\"))\n  \n  \n  \n})\noutput$plot1 <- renderHighchart({\n  \n  \n  highchart() %>%\n    \n    hc_add_series(data = sentiment$mysentiment.positive, type = \"column\",\n                  \n                  color = \"green\", showInLegend = FALSE,name=\"Positive\") %>%\n    hc_add_series(data =sentiment$mysentiment.fear , type = \"column\",\n                  \n                  color = \"navy\", showInLegend = FALSE,name=\"Fear\") %>%\n    hc_add_series(data =sentiment$mysentiment.anger , type = \"column\",\n                  \n                  color = \"teal\", showInLegend = FALSE,name=\"Anger\") %>%\n    hc_add_series(data =sentiment$mysentiment.joy , type = \"column\",\n                  \n                  color = \"blue\", showInLegend = FALSE,name=\"Joy\") %>%\n    hc_add_series(data =sentiment$mysentiment.sadness , type = \"column\",\n                  \n                  color = \"red\", showInLegend = FALSE,name=\"Sadness\") %>%\n    hc_add_series(data =sentiment$mysentiment.surprise , type = \"column\",\n                  \n                  color = \"yellow\", showInLegend = FALSE,name=\"Surprise\") %>%\n    hc_add_series(data =sentiment$mysentiment.negative , type = \"column\",\n                  \n                  color = \"black\", showInLegend = FALSE,name=\"Negative\") %>%\n    \n    hc_yAxis(title = list(text = \"Responses\"), allowDecimals = FALSE) %>%\n     hc_xAxis(categories = c(\"Emotional Categories\",\"Fear\",\"Anger\",\"Joy\",\"Sadness\",\"Surprise\",\"Negative\"),tickmarkPlacement = \"on\",\n              title = list(enabled = FALSE)\n             \n             ) %>%\n    hc_title(text = \"Emotions of the Tweets\",\n             style = list(fontWeight = \"bold\")) %>%\n    hc_plotOptions(series = list(stacking = FALSE)) %>%\n    \n    \n    hc_add_theme(hc_theme_538())\n})\n\n\noutput$plot2<- renderHighchart({\n \n  highchart(height = 4) %>%\n  hc_chart(borderColor = '#EBBA95',\n           borderRadius = 6,\n           borderWidth = 1,\n           backgroundColor = list(\n             linearGradient = c(0, 0, 500, 500),\n             stops = list(\n               list(0, 'rgb(255, 255, 255)'),\n               list(1, 'rgb(200, 200, 255)')\n             ))) %>%\n    \n    hc_add_series(data = posneg$mysentiment.positive, type = \"column\",\n                  \n                  color = \"green\", showInLegend = FALSE,name=\"Positive\") %>%\n    hc_add_series(data =posneg$mysentiment.fear , type = \"column\",\n                  \n                  color = \"olive\", showInLegend = FALSE,name=\"Fear\") %>%\n    hc_add_series(data =posneg$mysentiment.anger , type = \"column\",\n                  \n                  color = \"blue\", showInLegend = FALSE,name=\"Anger\") %>%\n    hc_add_series(data =posneg$mysentiment.joy, type = \"column\",\n                  \n                  color = \"navy\", showInLegend = FALSE,name=\"Joy\") %>%\n    hc_add_series(data =posneg$mysentiment.sadness , type = \"column\",\n                  \n                  color = \"red\", showInLegend = FALSE,name=\"Sadness\") %>%\n    hc_add_series(data =posneg$mysentiment.trust , type = \"column\",\n                  \n                  color = \"teal\", showInLegend = FALSE,name=\"Trust\") %>%\n    hc_add_series(data =posneg$mysentiment.negative , type = \"column\",\n                  \n                  color = \"red\", showInLegend = FALSE,name=\"Negative\") %>%\n    \n    hc_yAxis(title = list(text = \"Responses\"), allowDecimals = FALSE) %>%\n    hc_xAxis(categories = c(\"Emotional Categories\",\"Fear\",\"Anger\",\"Joy\",\"Sadness\",\"Surprise\",\"Negative\"),tickmarkPlacement = \"on\",\n             title = list(enabled = FALSE)\n             \n    ) %>%\n    hc_title(text = \"Emotions of the Tweets\",\n             style = list(fontWeight = \"bold\")) %>%\n    hc_plotOptions(series = list(stacking = FALSE)) %>%\n    \n    \n    hc_add_theme(hc_theme_538())\n})\n\n}\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1493203328427.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "629574885",
    "id" : "51C55AB4",
    "lastKnownWriteTime" : 1494330834,
    "last_content_update" : 1494330834290,
    "path" : "C:/Users/Nagadurga/Desktop/social_media analysis/socialmedia/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}