{
    "collab_server" : "",
    "contents" : "library(leaflet)\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(plotrix)\nlibrary(plotly)\nlibrary(metricsgraphics)\nlibrary(googleVis)\nlibrary(highcharter)\nlibrary(gender)\n#library(genderizeR)\nlibrary(plotrix)\n\n  \n\nserver <- function(input, output, session) {\n  \n  output$followerscount <- renderValueBox({\n    valueBox(\n      paste(lastweeklikescount), \"Last Week Likes\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"red\")\n  })\n  \n  output$favouritescount <- renderValueBox({\n    valueBox(\n      paste(Favouritescount), \"Followers Count of Ebay\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"green\"\n      \n    )\n  })\n  \n  output$retweetcount <- renderValueBox({\n    \n    valueBox(\n      paste(RetweetcountWeek), \"Last Week Retweets\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"blue\")\n  })\n  \n  \n  \n  output$Postsperweek <- renderValueBox({\n    valueBox(\n      paste(posts1perweek), \"Posts per week\",icon = icon(\"glyphicon glyphicon-list-alt\",lib=\"glyphicon\"),\n      color = \"green\")\n  })\n  \n  output$Likesperweek <- renderValueBox({\n    valueBox(\n      paste(likesperweek), \"Likes per week\",icon = icon(\"glyphicon glyphicon-thumbs-up\",lib=\"glyphicon\"),\n      color = \"red\")\n  })\n  \n  output$Commentsperweek <- renderValueBox({\n    valueBox(\n      paste(commentsperweek), \"Comments per week\",icon = icon(\"glyphicon glyphicon-comment\",lib=\"glyphicon\"),\n      color = \"teal\")\n  })\n  \n  output$Sharesperweek <- renderValueBox({\n    valueBox(\n      paste(sharesperweek), \"Shares per week\",icon = icon(\"glyphicon glyphicon-send\",lib=\"glyphicon\"),\n      color = \"yellow\")\n  })\n  \n  observeEvent(input$Map_marker_click, { # update the map markers and view on map clicks\n    p <- input$Map_marker_click\n    proxy <- leafletProxy(\"mymap\")\n    if(p$id==\"Selected\"){\n      proxy %>% removeMarker(layerId=\"Selected\")\n    } \n    else {\n      proxy %>% setView(lng=p$lng, lat=p$lat, input$Map_zoom) %>% acm_defaults(p$lng, p$lat)\n    }\n  })\n  \n  observeEvent(input$Map_marker_click, { # update the location selectInput on map clicks\n    p <- input$Map_marker_click\n    if(!is.null(p$id)){\n      if(is.null(input$location) || input$location!=p$id) updateSelectInput(session, \"location\", selected=p$id)\n    }\n  })\n  \n    output$mymap <- renderLeaflet({\n      \n      \n      \n     longlat<-longlat\n      \n   \n     leaflet(data=longlat) %>%\n       addTiles(urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n                                       \n                                       attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>') %>%\n      \n        addMarkers(data =longlat, lng = longlat$lon, lat = longlat$lat, popup = longlat$cities) %>%\n        \n       setView(lng = -93.85, lat = 37.45, zoom = 4) %>%\n       addProviderTiles(providers$Stamen.TonerLite,\n                        options = providerTileOptions(noWrap = TRUE))\n      \n    })\n    \n   \n  \n  output$mymap1 <- renderLeaflet({\n    \n   \n    leaflet() %>%addTiles(urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n                                      \n                                      attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>') %>%\n  addMarkers(data = longlat1, lat = ~longlat1$lat, lng = ~longlat1$lon,popup = paste0(longlat1$cities)) %>%\n      setView(lng = -93.85, lat = 37.45, zoom = 3) %>%\n     addProviderTiles(providers$Stamen.TonerLite,\n                      options = providerTileOptions(noWrap = TRUE))\n\n\n  })\n  \n   output$hour<-renderHighchart({\n    \n      highchart() %>%\n      hc_add_series_boxplot(x = count_hour$Freq, by = count_hour$Time, name = \"Tweets per Hour\")\n })\n\n   output$my6map<- renderHighchart({\n\n    highchart() %>%\n      hc_chart(type = \"line\") %>%\n      hc_xAxis(categories = Post_count_hour$Time) %>%\n      hc_add_series(name = \"Number of Posts\", data = Post_count_hour$Freq,color = \"#B71C1C\") \n })\n   \n   output$mymap6<- renderHighchart({\n     \n     highchart() %>%\n       hc_chart(type = \"line\") %>%\n       hc_xAxis(categories = count_df$Time) %>%\n       hc_add_series(name = \"Tweets per Minute\", data = count_df$Freq,color = \"#B71C1C\") \n   })\n   \n   output$my7map<- renderPlotly({\n     \n     plot_ly(polarity_per, labels = ~polarity_per$polarity, values = ~polarity_per$percentage, type = 'pie') %>%\n       layout(title = \"Twitter sentiment proportion for ebay\",\n              xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n              yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n     \n      \n     \n   })\n   \n\noutput$plotwc<- renderPlot({\n  \n  wordcloud(d$word,d$freq,scale=c(3,0.5),max.words=100,\n            random.order=FALSE,rot.per=0.30, use.r.layout=TRUE, colors=brewer.pal(8, \"Dark2\"))\n \n  \n  \n})\n\noutput$plotwc3<-  renderHighchart({\n  \n\n # plot_ly(country_count_likes1, x = ~Country, y = ~Likes, type = 'bar', name = 'Primary Product', marker = list(color = 'rgb(49,130,189)')) %>%\n    #add_trace(y = ~country_count_likes$count, name = 'Secondary Product', marker = list(color = 'rgb(204,204,204)')) %>%\n   # layout(xaxis = list(title = \"\", tickangle = -45),\n          # yaxis = list(title = \"\"),\n         #  margin = list(b = 200),\n         #  barmode = 'group')\n  highchart() %>%\n  \n    hc_add_series_labels_values(country_count_likes1$Country, country_count_likes1$Likes, colors = substr(terrain.colors(country_likes_color), 10 , 7),\n                              type = \"pie\", name = \"Bar\", colorByPoint = TRUE, center = c('50%', '50%'),\n                              size = 300, dataLabels = list(enabled = TRUE)) \n  \n  })\n  \n  \n\noutput$Revcurr<- renderGvis({\nrevqty<- select(Recenttop10frnds,name,location,Followingcount,Followerscount,Likescount)\n  revqtychart<-gvisTable(revqty)\n  return(revqtychart)\n\n})\n\n\noutput$plotwc10<- renderPlotly({\n\np<-ggplot(twf, aes(factor(!is.na(replyToSID)))) +\n  geom_bar(fill = \"midnightblue\") +\n  theme(legend.position=\"none\", axis.title.x = element_blank()) +\n  ylab(\"Number of tweets\") +\n  ggtitle(\"Replied Tweets\") +\n  scale_x_discrete(labels=c(\"Not in reply\", \"Replied tweets\"))\n\np\n})\n\n\noutput$plotwc1<- renderPlot({\n  \n  wordcloud(d1$word,d1$freq,scale=c(3,0.5),max.words=100,\n            random.order=FALSE,rot.per=0.30, use.r.layout=TRUE, colors=brewer.pal(8, \"Dark2\"))\n  \n  \n  \n})\noutput$plot1 <- renderHighchart({\n  \n  highchart() %>% \n    \n    \n    hc_add_series_labels_values(sentiment$Emotion, sentiment$value, name = \"Pie\", colorByPoint = TRUE, type = \"column\") %>% \n    \n    hc_add_series_labels_values(sentiment$Emotion, sentiment$value, colors = substr(terrain.colors(9), 0 , 7),\n                                type = \"pie\", name = \"Bar\", colorByPoint = TRUE, center = c('35%', '10%'),\n                                size = 100, dataLabels = list(enabled = FALSE)) %>% \n    \n    \n    hc_yAxis(title = list(text = \"Number  of Emotions\"),labels = list(format = \"{value}\"), max=75) %>% \n    hc_xAxis(title=list(text=\"Emotion\"),categories = sentiment$Emotion) %>% \n    hc_legend(enabled = FALSE) %>% \n    hc_tooltip(pointFormat = \"{point.y}\")\n  \n  \n  \n  \n  \n  \n})\n\n\noutput$plot2<- renderHighchart({\n \n  highchart() %>% \n    \n    \n  hc_add_series_labels_values(posneg$Emotion, posneg$value, name = \"Pie\", colorByPoint = TRUE, type = \"column\") %>% \n    \n    hc_yAxis(title = list(text = \"Number  of Emotions\"),labels = list(format = \"{value}\"), max=75) %>% \n    hc_xAxis(title=list(text=\"Emotion\"),categories = posneg$Emotion) %>% \n    hc_legend(enabled = FALSE) %>% \n    hc_tooltip(pointFormat = \"{point.y}\")\n})\n\n}\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1496860784368.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "817342821",
    "id" : "1C5A96D2",
    "lastKnownWriteTime" : 1496860722,
    "last_content_update" : 1496860722,
    "path" : "C:/Users/Ashok/Downloads/socialmedia/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}