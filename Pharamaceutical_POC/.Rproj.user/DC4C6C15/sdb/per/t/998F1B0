{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(shinydashboard)\nlibrary(googleVis)\nlibrary(highcharter)\nlibrary(ggiraph)\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(plotrix)\nlibrary(rsconnect)\nlibrary(RSQLite)\n\n\nserver <- function(input, output) {\n  output$maxphar <- renderValueBox({\n    valueBox(\n      paste(maxno.ofcommphar),paste(\"Community Pharmacies\"), icon = icon(\"glyphicon glyphicon-star\",lib=\"glyphicon\"),\n      color = \"aqua\"\n    )\n     }) \n  output$mediser <- renderValueBox({\n    valueBox(\n      paste(round(sum(patientser$d))), \"Patient Group Direction Top Service\",icon = icon(\"glyphicon glyphicon-open\",lib=\"glyphicon\"), \n      color = \"purple\")\n    \n  })\n  output$avgitems <- renderValueBox({\n    valueBox(\n      paste(avgitems),paste(\"AvgMonthlyItemsDispencedPerPharmacy\"), icon = icon(\"glyphicon glyphicon-asterisk\",lib=\"glyphicon\"),\n      color = \"red\"\n    )\n  })\n  output$TotalMur <- renderValueBox({\n    \n    valueBox(paste(max(Murserv$Total.MURs)),\"Mur Service Top City(London)\",color = \"teal\",icon = icon(\"glyphicon glyphicon-record\",lib=\"glyphicon\"))\n    \n  })\n  output$TotalcommunityPharmacies<-renderValueBox({\n    \n    valueBox(\n      paste(\"0.27\",\"%\"), \"Community Pharmacies Growth\", icon = icon(\"glyphicon glyphicon-tree-conifer\",lib=\"glyphicon\"),\n      color = \"olive\")\n    \n  })\n  output$AvgMitems<-renderHighchart({\n  \n          highchart() %>%\n      hc_yAxis(\n        title = list(text = \"Items Per Pharmacy\")\n        \n      ) %>%\n          hc_xAxis(categories = locationpharma$England,title=list(text = \"Regions\")) %>%\n          hc_add_series(name=\"AvgMonthlyItemsPerPharmacy\",data = locationpharma$Averagemonthlyitemsperpharmacy, type = \"column\",color=\"purple\",\n                        showInLegend = FALSE )\n  })\n  output$Pharmaciesgrowth<- renderGvis({\n    Region<-diff13141$Region\n    PreviousYear<-diff13141$CommunityPharmacies13\n    CurrentYear<-diff13141$CommunityPharmacies2014\n       Growth<-c(paste(0.23,upArrow),paste(0.22,upArrow),paste(0.29,upArrow),paste(0.27,upArrow),paste(0.15,upArrow))\n    pharmadiff<- data.frame(Region,CurrentYear,PreviousYear,Growth)\n    Pharmaciesgrowthchart<-gvisTable(pharmadiff,options=list(height=\"290px\"))\n    return(Pharmaciesgrowthchart)\n    \n  })\n  output$PharmaandItemsdispenced<-renderPlotly({\n   \n    m <- list(\n      l = 50,\n      r = 50,\n      b = 100,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \"\"\n      \n    )\n    x <- list(\n      title = \"Years\"\n      \n    )\n    \n    plot_ly(pharmaitemsdispenced\n            , x = ~pharmaitemsdispencedd$Year) %>%\n      add_bars(y=~pharmaitemsdispencedd$`0-2000`, name = \"0-2000\", visible = T,color=\"pink\") %>%\n      add_bars(y=~pharmaitemsdispencedd$`2000-4000`, name = \"2000-4000\",visible=T,color=\"purple\")%>%\n      add_bars(y=~pharmaitemsdispencedd$`4000-6000`, name = \"4000-6000\", visible = T,color=\"skyblue\") %>%\n      add_bars(y=~pharmaitemsdispencedd$`6000-8000`, name = \"6000-8000\", visible = T,color=\"orange\") %>%\n      add_bars(y=~pharmaitemsdispencedd$`8000-10000`, name = \"8000-10000\", visible = T,color=\"grey\") %>%\n      add_bars(y=~pharmaitemsdispencedd$`10000+`, name = \"10000+\", visible = T) %>%\n      \n      layout( margin=m, xaxis=x,yaxis=y)\n  })\n  output$AppDec<-renderPlotly({\n    \n    colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')\n    \n    p <- plot_ly( marker = list(colors = colors,width=2)) %>%\n      add_pie(data = decisions, labels = decisions$Applications, values = decisions$NewPremises,\n              name = \"NewPremises\", domain = list(x = c(0, 0.4), y = c(0.4, 1))) %>%\n      add_pie(data =decisions , labels = decisions$Applications, values = decisions$AdditionalPremises,\n              name = \"AdditionalPremises\", domain = list(x = c(0.6, 1), y = c(0.4, 1))) %>%\n      \n      layout(title = \"Decisions on applications relating to NHS\", showlegend = T,\n             xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n             yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n    p\n  })\n  \n  output$populationwisepharmacies<-renderPlotly({\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 100,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \"Pharmacies\"\n      \n    )\n    x <- list(\n      title = \"Regions\"\n      \n    )\n    library(plotly)\n    set.seed(100)\n   \n    plot_ly(locationpharma, x = ~England, y = ~Pharmaciesper100000population,type = \"bar\",color = ~England)%>%\n      layout(margin=m,xaxis=x,yaxis=y,showlegend=F)\n  })\n  output$contractorsdiff<- renderGvis({\n    revqty<- select(msalebrand16mar,Brand,Revenue,LastMonthSales,SalesGrowth)\n    revqtychart<-gvisTable(revqty,options=list(height=\"300px\"))\n    return(revqtychart)\n    \n  })\n  \n \n  \n  \n  \n  output$ypharmmacies<- renderGvis({\n    Years<-dispenca1$Year\n     Pharmacies<-dispenca1$Numberofcommunitypharmacies\n    pharma1<-data.frame(cbind(Years,Pharmacies))\n    ypharmmacieschart<-gvisColumnChart(pharma1,xvar = \"Years\",yvar = \"Pharmacies\",options =list(seriesType=\"bars\",colors=\"['66CCFF']\",height=\"290px\",width=\"550px\"))\n    return(ypharmmacieschart)\n  })\n  \n \n  output$locationwisepharma <- renderHighchart({\n    \n\n    highchart() %>%\n      \n      hc_xAxis(categories =locationpharma$England) %>%\n      hc_add_series(name=\"Pharmacies\",data =locationpharma$Numberofcommunitypharmacies , type = \"area\",\n                    fillColor = 'url(#custom-pattern)',\n                    showInLegend = FALSE )%>%\n      hc_add_theme(hc_theme_chalk())%>%\n      hc_defs(patterns = list(\n        list(id = 'custom-pattern',\n             path = list(d = 'M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11',\n                         stroke = \"white\",\n                         strokeWidth = 1\n             )\n        )\n      )) \n    \n                    \n    \n\n  })\n  output$plotIris<- renderGvis({\n   \n    openclose<-openclose\n    openclose<-na.omit(openclose)\n    yilgeostate <- gvisBubbleChart(openclose,\"England\",\"CommunityPharmaciesOpening1314\",options=list(height=\"300px\",region=\"England\",displayMode=\"regions\",resolution=\"provinces\",height=\"400px\",colors=\"['#5B2C6F']\"))\n    return(yilgeostate)\n    \n  })\n  output$Mitemsperpharm<-renderHighchart({\n   \n    highchart() %>%\n    hc_chart(type = \"scatter\") %>%\n    hc_yAxis(\n      title = list(text = \"Dispenced Items\")\n\n    ) %>%\n      \n    hc_add_theme(hc_theme_sandsignika())%>%\n    hc_xAxis(categories = locationpharma$England) %>%\n    hc_add_series(name = \"Cities\", data = locationpharma$Prescriptionitemsdispensedpermonth000s) %>%\n    \n\n     hc_chart(type = \"column\",\n              options3d = list(enabled = TRUE, beta = 15, alpha = 15))\n\n  \n  })\n  \n  output$Ycontractors<-renderPlotly({\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 80,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \"Contractors\"\n      \n    )\n    x <- list(\n      title = \"Region Names\"\n      \n    )\n    \n    plot_ly(Esplsplspc\n            , x = ~Esplsplspc$England) %>%\n      add_bars(y=~Esplsplspc$ESPLPScontractors, name = \"ESPLSPContractors\", visible = T,marker = list(color = 'rgb(49,130,189)')) %>%\n      add_bars(y=~Esplsplspc$otherLPcontractors, name = \"OtherLSPContractors\",visible=T, marker = list(color = 'rgb(8,48,107)'))%>%\n      \n      layout( margin=m, xaxis=x,yaxis=y,showlegend=F)\n   \n  })\n  \n  output$lcontractors<-renderPlotly({\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 80,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \"Contractors\"\n      \n    )\n    x <- list(\n      title = \"Region Names\"\n      \n    )\n    \n    plot_ly(lcontracto2\n            , x = ~lcontracto2$England) %>%\n      add_lines(y=~lcontracto2$IndependentContractors14, name = \"IndependentContractors\", visible = T) %>%\n      add_lines(y=~lcontracto2$MultipleContractors14, name = \"MultipleContractors\",visible=T)%>%\n    \n      layout( margin=m, xaxis=x,yaxis=y,showlegend=F)\n\n  })\n  output$Esplsp <- renderHighchart({\n    Year<-prescridata$Year\n    PrescriptionItems<-prescridata$Prescriptionitemsdispensed..millions.\n    df<-data.frame(PrescriptionItems,Year)\n       highchart() %>%\n         hc_yAxis(\n           title = list(text = \"Pharmacies\")\n           \n         ) %>%\n      hc_add_theme(hc_theme_darkunica())%>%\n      hc_xAxis(categories=df$Year,title=list(text = \"Years\")) %>%\n      hc_add_series(name=\"Items\",data =df$PrescriptionItems , \n                    showInLegend = FALSE ,color=\"skyblue\",title=\n                      \"Prescription Data\")\n  })\n  \n  output$EspLSpLSP <- renderPlotly({\n    cites<-as.list(Esplsplspc$England)\n    Espcontra<-as.list(Esplsplspc$ESPLPScontractors)\n    otercontru<-as.list(Esplsplspc$otherLPcontractors)\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 90,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \"ESPLSP Contractors\"\n      \n    )\n    x <- list(\n      title = \"Regions\"\n      \n    )\n    \n    \n    plot_ly(Esplsplspc, x = ~cites) %>%\n      add_polygons(y=~Esplsplspc$otherLPcontractors, name = \"OterLspcontractors\") %>%\n      add_bars(y=~Esplsplspc$ESPLPScontractors, name = \"EspContractors\", visible = T)  %>%\n      add_paths(y=~Esplsplspc$otherLPcontractors, name = \"OterLspcontractors\", visible = T) %>%\n      layout( margin = m,xaxis=x,yaxis=y,title=\"\n              \")\n    \n    \n  })\n  \n  \n  output$Mur <- renderPlotly({\n    city<- Murser$England\n    communityphar<-Murser$Number.of.community.pharmacies.2013.14\n    Murservices<- Murser$PercentageofPharmaciesprovidingMURservices\n    m <- list(\n      l = 50,\n      r = 50,\n      b = 90,\n      t = 100,\n      pad = 3\n    )\n    y <- list(\n      title = \" MURServices\"\n      \n    )\n    x <- list(\n      title = \"England\"\n      \n    )\n    \n    \n    plot_ly(Murser, x = ~Murser$England) %>%\n      \n      \n      add_trace(y=~Murser$Number.of.community.pharmacies.2013.14, name = \"Mur Services\", visible = T)%>%\n      layout( margin = m,xaxis=x,yaxis=y,title=\"MURServices\")\n    \n    \n    \n  })\n \n  output$pharmaranges1<-renderPlotly({\n    \n    m <- list(\n      l = 50,\n      r = 50,\n      b = 100,\n      t = 100,\n      pad = 4\n    )\n    y <- list(\n      title = \"\"\n\n    )\n    x <- list(\n      title = \"Years\"\n\n    )\n    plot_ly(Ynoofpham,x = ~Ynoofpham$Year) %>%\n      add_bars(y=~Ynoofpham$`0-2000`, name = \"0-2000\", visible = T) %>%\n      add_bars(y=~Ynoofpham$`2000-4000`, name = \"2000-4000\",visible=T) %>%\n      add_bars(y=~Ynoofpham$`4000-6000`, name = \"4000-6000\", visible = T) %>%\n      add_bars(y=~Ynoofpham$`6000-8000`, name = \"6000-8000\", visible = T) %>%\n      add_bars(y=~Ynoofpham$`8000-10000`, name = \"8000-10000\", visible = T) %>%\n      add_bars(y=~Ynoofpham$`10000+`, name = \"10000+\", visible = T)%>%\n      layout(margin = m,title=\"Year Wise Pharmacies Range\",xaxis=x,yaxis=y, height = \"260px\")\n\n\n      \n  })\n\n\n\noutput$indvsmul<- renderHighchart({\n \n ind<-as.integer(indvsmul3$independentcontructors)\n    \n    mul<-as.integer(indvsmul3$multiplecontructors)\n    names<-c(\"Indpendentcontructors\",\"Multiplecontructors\")\n     names=as.data.frame(names)\n     cont<-data.frame(rbind(ind,mul))\n     contdata<-cbind(names,cont)\n     \n    \n    \n     highchart(width = 50, height = 50) %>%\n       hc_title(text = \"Independent Vs Multiple Contractors\") %>%\n       \n\n       hc_chart(type = \"pie\", options3d = list(enabled = TRUE, alpha = 70, beta = 0,color = 'rgb(255, 110, 176)')) %>%\n       hc_plotOptions(pie = list(depth = 70)) %>%\n       hc_add_series_labels_values(contdata$names,contdata$rbind.ind..mul.) %>%\n       hc_add_theme(hc_theme(\n         chart = list(\n          backgroundColor = NULL\n\n         )\n       ))\n})\noutput$Nmsser<-renderPlotly({\n  \n  plot_ly(NMSservice, x = ~NMSservice$Area) %>%\n    add_histogram2dcontour(y=~NMSservice$Total.NMSs.1, name = \"NMS Services\", visible = T)\n})\n\n\nfilterIris2 <- reactive({\n  filter(AUR, year == AUR$year)\n})\noutput$Aur<-renderggiraph({\n  \n  \n  gg <- ggplot(filterIris2(), aes(x = year, y = TotalAurs),color=\"yellow\")\n  gg <- gg + geom_bar_interactive(stat = \"identity\",color=c(\"green\",\"red\",\"yellow\",\"blue\",\"purple\"),\n                                  aes(tooltip = filterIris2()$TotalAurs), size = 0.5)\n  \n  ggiraph(code = print(gg),height_svg = 3.3)\n})\n\n\nfilterIris1 <- reactive({\n  filter(Nms, Year == Nms$Year)\n})\n\n\noutput$Nms<-renderggiraph({\n  \n  gg <- ggplot(filterIris1(), aes(x = Year, y = Total.NMS),color=\"yellow\")\n  gg <- gg + geom_bar_interactive(stat = \"identity\",color=c(\"green\",\"red\",\"yellow\"),\n                                  aes(tooltip = filterIris1()$Total.NMS), size = 0.5)\n  \n  ggiraph(code = print(gg),height_svg = 3.3)\n})\n\n\noutput$totalser<-renderPlotly({\n\n  m <- list(\n    l = 50,\n    r = 50,\n    b = 100,\n    t = 100,\n    pad = 3\n  )\n  y <- list(\n    title = \"\"\n    \n  )\n  x <- list(\n    title = \"Years\"\n    \n  )\n  \n  plot_ly(Totalser\n          , x = ~Totalser$X) %>%\n    add_bars(y=~Esplsplspc$ESPLPScontractors, name = \"0-2000\", visible = T,color=\"skyblue\") %>%\n    add_bars(y=~Esplsplspc$otherLPcontractors, name = \"2000-4000\",visible=T,color=\"orange\")%>%\n       layout( margin=m, xaxis=x,yaxis=y,height=\"260px\")\n})\noutput$AppDec<-renderPlotly({\n  \n  colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')\n  \n  p <- plot_ly( marker = list(colors = colors,width=1)) %>%\n    add_pie(data = decisions, labels = decisions$Applications, values = decisions$NewPremises,\n            name = \"NewPremises\", domain = list(x = c(0, 0.4), y = c(0.1, 1.5))) %>%\n    add_pie(data =decisions , labels = decisions$Applications, values = decisions$AdditionalPremises,\n            name = \"AdditionalPremises\", domain = list(x = c(0.6, 1), y = c(0.1, 1.5))) %>%\n    \n    layout(title = \"Decisions on applications relating to NHS\", showlegend = T,\n           xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n           yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n  p\n})\noutput$Appstatus<-renderPlotly({\n \n  plot_ly(statuss, labels = statuss$Decisions, values = statuss$Controlledarea, type = \"pie\",name = \"Application Status\", showlegend = T) %>%\n    layout(title = \"Decisions on application on appeal\",xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n  \n})\noutput$pharmaciesprov<-renderHighchart({\n  highchart() %>%\n    hc_yAxis(title=list(text = \"Pharmacies\"))%>%\n    hc_add_theme(hc_theme_ffx())%>%\n    hc_xAxis(categories=PharmprovidingMurservices$Year,title=list(text = \"Years\")) %>%\n    hc_add_series(name=\"Pharmacies\",data = PharmprovidingMurservices$PharmaciesprovidingMURservices, \n                  showInLegend = FALSE )\n})\noutput$exemptpharmacies<-renderPlotly({\n  p <- plot_ly(yexempcategoryy, x = ~Year, y = ~Numberofcommunitypharmacies,  type = 'scatter', mode = 'markers', size = ~Year, color = ~Year, colors = 'Paired',\n               marker = list(opacity = 0.5, sizemode = 'diameter')) %>%\n    layout(title = 'Exempt Category wise Items',\n           xaxis = list(showgrid = FALSE,title=\"Years\"),\n           yaxis = list(showgrid = FALSE,title=\"Items\"),\n           showlegend = FALSE)\n  p\n})\n\n\noutput$lexemptplot<-renderPlotly({\n                 \n  m <- list(\n    l = 50,\n    r = 50,\n    b = 100,\n    t = 100,\n    pad = 3\n  )\n  y <- list(\n    title = \"Pharmacies\"\n    \n  )\n  x <- list(\n    title = \"Regions\"\n    \n  )\n  library(plotly)\n  set.seed(100)\n  plot_ly(lexemptcategorydataa,x=~Region,y=~Numberofcommunitypharmacies,type = \"bar\", marker = list(color = 'rgba(50, 171, 96, 0.7)',\n                                                                                                   line = list(color = 'rgba(50, 171, 96, 1.0)', width = 1)))%>%\n    layout(margin=m,xaxis=x,yaxis=y,showlegend=F)\n  \n})\n\noutput$YSAC<-renderPlotly({\n  p<-plot_ly(YSACs,x = ~Year,y = ~CommunitypharmacyprovidingSAC, type = \"bar\",\n            marker = list(color = brewer.pal(6, \"Paired\")))%>%\n    layout(title=\"Community Pharmacies Providing SAC Service\", xaxis = list(title = \"Year\"), yaxis = list(title = \"Pharmacies\"))\n})\noutput$Difference<- renderGvis({\n  Region<-LSACdata$Regions\n  PreviousYear<-LSACdata$AverageSACpercommunitypharmacy13\n  CurrentYear<-LSACdata$AverageSACpercommunitypharmacy14\n  #Growth<-paste(diff1314$Pharmagrowth,upArrow)\n  Growth<-c(paste(4.32,upArrow),paste(3.68,upArrow),paste(-4.57,downArrow),paste(9.05,upArrow))\n  lSACdiff<- data.frame(Region,CurrentYear,PreviousYear,Growth)\n  SACGrowthchart<-gvisTable(lSACdiff,options=list(height=\"300px\"))\n  return(SACGrowthchart)\n  \n})\noutput$ltotalexempt<-renderHighchart({\n  highchart() %>%\n    #hc_add_theme(hc_theme_ffx())%>%\n    hc_yAxis(title=list(text = \"Pharmacies\"))%>%\n    hc_xAxis(categories=lexemptcategorydataa$Region,title=list(text = \"Regions\")) %>%\n    hc_add_series(name=\"Pharmacies\",data = lexemptcategorydataa$hr.100pharmacies, \n                  showInLegend = FALSE )\n})\noutput$Nmsserervice<-renderHighchart({\n  \n  highchart() %>%\n    hc_chart(type = \"area\") %>%\n    hc_xAxis(categories=NMSservice$Area,title = list(text = \"Region Names\")) %>%\n    hc_yAxis(\n      title = list(text = \"NMS Services\")\n    ) %>% \n    hc_add_theme(hc_theme_sandsignika())%>%\n    hc_add_series(name = \"England\", data =NMSservice$AverageNMSperpharmacy)\n  \n})\n\noutput$Aurser<-renderHighchart({\n  \n  highchart() %>%\n    hc_yAxis(\n      title = list(text = \"Pharmacies\")\n    ) %>%\n    hc_xAxis(categories = AurService$Regions,title = list(text = \"Regions\")) %>%\n    hc_add_series(name=\"AUR SERVICEs\",data = AurService$Number.of.community.pharmacy.and.appliance.contractors, type = \"column\",color=\"blue\",\n                  showInLegend = FALSE )\n  # highchart() %>%\n  #   hc_xAxis(categories = AurService$Regions) %>%\n  #   hc_add_series(name=\"AUR SERVICEs\",data = AurService$AurServices, type = \"column\",color=\"blue\",\n  #                 showInLegend = FALSE )\n})\noutput$Esplspcontractors<- renderHighchart({\n  ind<-as.integer(Esplspercentagess$esplspcontractors)\n  \n  mul<-as.integer(Esplspercentagess$lspcontractors)\n  \n  colors<- c('#2f7ed8', '#0d233a', '#8bbc21', '#910000', \n           '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a')\n  \n  \n  names<-c(\"EspLspcontractors\",\"Othercontractors\")\n  names=as.data.frame(names)\n  cont<-data.frame(rbind(ind,mul))\n  contdata<-cbind(names,cont)\n  \n  \n  \n  highchart(width = 50, height = 50) %>%\n    hc_title(text = \"ESPLSP Vs OtherLSP Contractors\") %>%\n\n    hc_chart(type = \"pie\", options3d = list(enabled = TRUE, alpha = 70, beta = 0,color =  colors)) %>%\n    hc_plotOptions(pie = list(depth = 70)) %>%\n    hc_add_series_labels_values(contdata$names,contdata$rbind.ind..mul.) %>%\n    hc_add_theme(hc_theme(\n      chart = list(\n        backgroundColor = NULL\n\n      )\n    ))\n \n})\n\n}\n",
    "created" : 1493879796174.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2729607398",
    "id" : "998F1B0",
    "lastKnownWriteTime" : 1495020809,
    "last_content_update" : 1495020809328,
    "path" : "C:/Users/Rama Devi/Desktop/Pharamaceutical_POC/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}